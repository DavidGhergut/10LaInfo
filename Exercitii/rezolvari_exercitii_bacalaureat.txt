-> Exercitiul #9 <-

Care dintre următoarele expresii C/C++ are valoarea 1 dacă și numai dacă numărul real memorat în variabila x se află în intervalul (-2,2)?

Raspuns: 4-x*x>0

-> Exercitiul #10 <- 

Care este rezultatul evaluării expresiei C/C++ următoare: 11*3/2*2/3?

Raspuns: 10

-> Exercitiul #11 <-

Variabila x este de tip real. Care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă numărul real memorat în variabila x nu aparţine intervalului (2,9]?

Raspuns: (x <= 2) || (x > 9)

-> Exercitiul #12 <-

Care dintre următoarele expresii C/C++ are ca valoare cel mai mic dintre numerele naturale nenule, cu cel mult 4 cifre fiecare, memorate în variabilele întregi x şi y?

Raspuns: (x + y - abs(x - y)) / 2

-> Exercitiul #13 <-

Fiecare dintre variabilele întregi x şi y memorează câte un număr natural. Care dintre expresiile C/C++ de mai jos are valoarea 1 dacă şi numai dacă numărul memorat în x este strict mai mare decât 0 şi numărul memorat în y este strict mai mare decât 5?

Raspuns: !(x*(y-5)<=0)

-> Exercitiul #14 <-

Care dintre următoarele expresii C/C++ are ca valoare cel mai mare dintre numerele naturale nenule, cu cel mult 4 cifre fiecare, memorate în variabilele întregi a şi b?

Raspuns: (a+b+abs(a-b))/2

-> Exercitiul #15 <-

Care dintre expresiile C/C++ de mai jos este echivalentă cu următoarea expresie ((a>3) && (a<15)) || (a!=b)?

Raspuns: !((a<=3) || (a>=15)) || (a!=b)

-> Exercitiul #16 <-

Variabilele x şi y sunt de tip întreg, x memorând valoarea 8, iar y valoarea 6. Care dintre expresiile C/C++ de mai jos are valoarea 0?

Raspuns: !(x/2+2==y)

-> Exercitiul #17 <-

Care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă variabilele x şi y memorează două numere naturale pare consecutive?

Raspuns: ((x-y==2) || (y-x==2)) && (x%2==0)

-> Exercitiul #18 <-

Care dintre expresiile C/C++ de mai jos este echivalentă cu expresia următoare !((a<5)&&(b>7)) ?

Raspuns: !(a<5) || !(b>7)

-> Exercitiul #19 <-

Pentru care dintre perechile de valori de mai jos expresia C/C++ următoare (a%100==b%100) && (a>99) || (b>99) are valoarea 1?

Raspuns: a=1003 si b=3

-> Exercitiul #20 <-

Variabilele x şi y sunt de tip întreg, x memorând valoarea 4, iar y valoarea 2. Care dintre expresiile C/C++ de mai jos are valoarea 0?

Raspuns: !(x==2*y)

-> Exercitiul #21 <-

Care dintre următoarele instrucţiuni C/C++ determină inserarea cifrei 7 în faţa ultimei cifre a unui număr natural, cu mai mult de 2 cifre, memorat în variabila x?

Raspuns: x=(x/10*10+7)*10+x%10;

-> Exercitiul #24 <-

Care dintre următoarele instrucţiuni C/C++ determină eliminarea cifrei din mijloc a unui număr natural, cu exact 5 cifre, memorat în variabila x?

Raspuns: x=x/1000*100+x%100;

-> Exercitiul #26 <-

Care este valoarea tipărită de secvenţa de program C/C++ de mai jos, ştiind că x şi y sunt variabile întregi, iar z este o variabilă reală?

x=30;
y=5;
z=(x+y)/6.0;
z=floor(z*100);
z=z/100;
cout<<z; | printf(“%0.2f”,z);

Raspuns: 5.83

-> Exercitiul #28 <-

Care este valoarea expresiei C/C++ de mai jos dacă variabilele întregi a, b, c au valorile a=20, b=3, c=5?

(a/b%c<=b)||!(b==a)

Raspuns: 1

-> Exercitiul #29 <-

Care dintre expresiile C/C++ de mai jos este echivalentă cu !((a<=b && a>=c) || a<=d)?

Raspuns: (a>b || a<c) && a>d

-> Exercitiul #30 <-

Care din următoarele afirmaţii despre operatorii din C/C++ este falsă?

Raspuns: <= este operator logic

-> Exercitiul #32 <-

Care este cea mai mică valoare pe care o poate avea expresia C/C++ de mai jos dacă variabila x, de tip int, memorează un număr natural cu o singură cifră?

x/7-x%7

Raspuns: -6

-> Exercitiul #33 <-

În expresia C/C++ x%2+(x+1)%2 variabila x este de tip întreg. Această expresie:

Raspuns: are valoarea 1 pentru orice numar natural x

-> Exercitiul #34 <-

Câte valori distincte, numere naturale, poate primi variabila x pentru ca valoarea expresiei x/2/2 scrisă în C/C++ să fie egală cu 1?

Raspuns: 4

-> Exercitiul #35 <-

Care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă numărul natural nenul memorat în variabila x, de tip int, este divizibil cu 100?

Raspuns: x%10+x/10%10==0

-> Exercitiul #36 <-

Care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă numărul natural memorat de variabila x de tip int are exact două cifre?

Raspuns: x/100==0 && x/10!=0

-> Exercitiul #37 <-

Se consideră variabila a care memorează un număr cu exact 6 cifre. Care dintre expresiile C/C++ de mai jos are ca valoare numărul format din cele două cifre din mijloc ale valorii memorate în a?

Raspuns: a/100#100

-> Exercitiul #38 <-

Stabiliţi care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă numărul întreg memorat în variabila x nu aparţine intervalului (-35,-20)∪[17,100].

Raspuns: (x<=-35) || ((x<=16) && (x>=-20)) || (x>100)

-> Exercitiul #39 <-

Variabila a memorează un număr natural care are exact 3 cifre. Care dintre expresiile C/C++ de mai jos are ca valoare numărul format din prima şi ultima cifră a numărului memorat de a?

Raspuns: a/100*10+a%10

-> Exercitiul #41 <-

Stabiliţi care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă numărul întreg memorat în variabila x nu aparţine intervalului (-35,-20].

Raspuns: (x<=-35) || (x>-20)

-> Exercitiul #44 <-

Care dintre expresiile următoare, scrise în limbajul C/C++, are valoarea 1 dacă şi numai dacă valorile variabilelor întregi x şi y sunt numere pare?

Raspuns: (x%2==0) && (y%2==0)

-> Exercitiul #46 <-

Care este valoarea expresiei C/C++ de mai jos?

50-(100–300/2/(2+3))

Raspuns: -20

-> Exercitiul #47 <-

Ştiind că variabilele x şi y sunt de tip întreg, care este instrucţiunea prin care variabilei x i se atribuie ultima cifră a numărului natural memorat în variabila y?

Raspuns: y=x%10

-> Exercitiul #48 <-

Ştiind că variabilele x şi y sunt de tip întreg, care este instrucţiunea prin care variabilei x i se atribuie cifra zecilor numărului natural cu cel puţin două cifre memorat de variabila y?

Raspuns: x=y/10%10

-> Exercitiul #49 <-

Care este instrucţiunea prin care variabilei x i se atribuie valoarea sumei cifrelor numărului natural format din exact trei cifre, memorat de variabila întreagă y?

Raspuns: x=y/100+y/10%10+y%10

-> Exercitiul #50 <-

Care este instrucțiunea prin care variabilei întregi x i se atribuie valoarea cifrei sutelor numărului natural cu cel puţin 4 cifre memorat în variabila întreagă y?

Raspuns: x=y/100%10;

-> Exercitiul #51 <-

Care este instrucţiunea prin care variabilei x i se atribuie numărul obţinut prin inversarea ordinii cifrelor numărului natural format din exact 2 cifre, memorat în variabila întreagă y?

Raspuns: x=y%10*10+y/10;

-> Exercitiul #52 <-

Variabila întreagă n memorează un număr natural impar. Care dintre următoarele expresii C/C++ are valoarea 1?

Raspuns: n%2!=0

-> Exercitiul #53 <-

Care dintre următoarele variabile nu îşi modifică valoarea în urma executării secvenţei de instrucţiuni de mai jos, oricare ar fi valorile lor iniţiale? (a, b, c sunt variabile de tip int).

Raspuns: doar a si b

-> Exercitiul #54 <-

Variabilele a, b şi c, de tip int, pot fi iniţializate cu oricare numere naturale impare distincte. Ştiind că c este divizor al lui a, iar b nu este multiplu al lui c, care dintre următoarele expresii scrise în C/C++ are valoare 1?

Raspuns: !((a % c != 0) || !(b % c != 0))

-> Exercitiul #55 <-

Variabila a, de tip int, memorează un număr natural impar, iar variabila b, de tip int, memorează un număr natural par. Care dintre următoarele expresii C/C++ are valoarea 1?

Raspuns: !(!(a%2) || b%2)

-> Exercitiul #56 <-

Variabilele a şi b sunt de tip int, iar variabilele c şi d sunt de tip double. Care dintre următoarele instrucţiuni de atribuire nu este corectă din punct de vedere sintactic?

Raspuns: c=2-d%2*a;

-> Exercitiul #57 <-

Variabila întreagă x memorează un număr natural cu exact 4 cifre. Care dintre următoarele instrucţiuni C/C++ determină, în urma executării, eliminarea cifrei sutelor numărului memorat de variabila x?

Raspuns: x=x/1000*100+x%100;

-> Exercitiul #58 <-

Cărui interval îi aparţine valoarea memorată de variabila reală x astfel încât expresia următoare, scrisă în limbajul C/C++, să aibă valoarea 1?

(x<=-2) || (x>-1) && !(x>=1) || (x>50)

Raspuns: (-∞,-2] ∪ (-1,1) ∪ (50, ∞)

-> Exercitiul #59 <-

Variabila întreagă x memorează un număr natural. Care dintre următoarele expresii C/C++ are valoarea 0 dacă şi numai dacă numărul memorat de x NU este divizibil cu 3?

Raspuns: (1-x%3)*(2-x%3)

-> Exercitiul #60 <-

Cărui interval îi aparţine valoarea memorată de variabila reală x astfel încât expresia următoare, scrisă în limbajul C/C++, să aibă valoarea 1?

!((x<=1) || (x>50))

Raspuns: (1,50]

-> Exercitiul #61 <-

Care dintre următoarele expresii C/C++ este echivalentă cu !((x>=5)&&(x<10))?

Raspuns: (x<5) || (x>=10)

-> Exercitiul #1045 <-

Variabila x este de tip întreg și poate memora un număr natural din intervalul [0,109). Indicați valoarea maximă pe care o poate avea expresia C/C++ x%2020.

Raspuns: 2019

-> Exercitiul #1046 <-

Subprogramul f este definit mai jos.

void f(int x){  
    cout<<"*";
    if(x>5) f((x+1)/2); 
}

Indicați apelul în urma căruia simbolul * se afișează de trei ori.

Raspuns: f(17);

-> Exercitiul #1047 <-

Utilizând metoda backtracking se generează toate modalitățile de a prepara o băutură din câte 3 sau 4 tipuri de fructe distincte din mulțimea {căpșune, mere, pepene, pere, portocale}. Primele patru soluții generate sunt, în această ordine: (căpșune, mere, pepene), (căpșune, mere, pepene, pere), (căpșune, mere, pepene, portocale), (căpșune, mere, pere). Indicați cea de a șasea soluție generată.

Raspuns: (căpșune, mere, portocale)

-> Exercitiul #1048 <-

Un arbore cu 9 noduri, numerotate de la 1 la 9, este reprezentat prin vectorul de „tați” (8,6,4,2,3,0,4,2,7). Indicați un „frate” al nodului 4.

Raspuns: 8

-> Exercitiul #1049 <-

Un graf neorientat eulerian cu 5 noduri are un nod cu gradul 4. Indicați numărul minim de muchii ale grafului.

Raspuns: 6

-> Exercitiul #1054 <-

Indicați valoarea expresiei C/C++ de mai jos:

3+5.0/2+2

Raspuns: 7.5

-> Exercitiul #1055 <-

Variabila v memorează un tablou unidimensional cu 4 elemente, numerotate începând de la 0.
Subprogramul f este definit mai jos.

void f(int i, int v[4]) { 
    if(i>=3) v[i]=v[i]+1;
    else f(i+1,v);
    cout<<v[i];  |  printf("%d",v[i]); 
} 

Indicați setul de elemente pe care le poate avea tabloul memorat în v, în ordinea în care apar în acesta, astfel încât, în urma apelului de mai jos, să se afișeze pe ecran 2020.

f(0,v);

Raspuns: 0,2,0,1

-> Exercitiul #1056 <-

Utilizând metoda backtracking se generează toate variantele prin care patru persoane pot plăti o consumație totală de 200 de lei în următoarele condiții:

fiecare plătește o sumă nenulă, divizibilă cu 10;
primul plătește mai mult decât al doilea, al doilea mai mult decât al treilea, iar acesta mai mult decât al patrulea.
O soluție constă în patru valori, reprezentând, în ordine, sumele plătite de fiecare dintre cele patru persoane. Primele patru soluții generate sunt, în această ordine: (70, 60, 40, 30), (70, 60, 50, 20), (80, 50, 40, 30), (80, 60, 40, 20). Indicați cea de a șasea soluție, în ordinea generării acestora.

Raspuns: (80,70,30,20)

-> Exercitiul #1057 <-

Un arbore cu 10 noduri, numerotate de la 1 la 10, este reprezentat prin vectorul de „tați” (7,5,6,5,7,0,6,3,3,8). Indicați numărul de noduri „frunză” ale acestui arbore.

Raspuns: 5

-> Exercitiul #1058 <-

Un graf neorientat cu 5 noduri este reprezentat prin matricea de adiacență de mai jos. Indicați numărul grafurilor parțiale conexe ale acestuia care sunt diferite de graful dat.

0 1 0 1 1
1 0 1 0 0
0 1 0 1 0
1 0 1 0 0
1 0 0 0 0

Raspuns: 4

-> Exercitiul #1063 <-

Variabila x este de tip întreg și poate memora un număr din intervalul [1000,2000]. Indicați valoarea minimă pe care o poate avea expresia C/C++ de mai jos.

(x-999)%1000

Raspuns: 0

-> Exercitiul #1064 <-

Subprogramul f este definit mai jos.

void f(int x) 
{ if(x>=2)   
  { if(x%2==0) cout<<0;  |  printf(”0”);     
    f(x/2);
  }
  else cout<<7;  |  printf(”7”);
  cout<<x; | printf(”%d”,x); 
}

Indicați ce se afișează în urma apelului de mai jos.

f(9);

Raspuns: 0071249

-> Exercitiul #1065 <-

Utilizând metoda backtracking, se generează toate meniurile care cuprind câte patru feluri distincte de mâncare din mulțimea {aperitiv, desert, legume, paste, salată, supă}, fiecare meniu respectând următoarele condiții:

dacă există aperitiv, este servit primul;
dacă există desert, este servit ultimul;
NU sunt servite legume și salată în același meniu;
dacă există paste și supă în același meniu, pastele NU sunt servite înainte de supă.
Două meniuri sunt distincte dacă diferă prin cel puțin un fel de mâncare sau prin ordinea servirii acestora. Primele cinci meniuri generate sunt, în această ordine: (aperitiv, legume, paste, desert), (aperitiv, legume, supă, desert), (aperitiv, legume, supă, paste), (aperitiv, paste, legume, desert), (aperitiv, paste, salată, desert).

Indicați al șaselea meniu generat

Raspuns: (aperitiv, salată, paste, desert)

-> Exercitiul #1066 <-

Un graf orientat cu 5 vârfuri, numerotate de la 1 la 5, este reprezentat mai jos.

1: 2
2: 5
3: 4
4: 3
5: 1, 3, 4

Indicați numărul de componente tare conexe ale grafului.

Raspuns: 2

-> Exercitiul #1067 <-

Un arbore cu rădăcină are 20 de noduri, dintre care 10 noduri de tip “frunză”. Indicați numărul maxim de noduri care au același “tată” în acest arbore.

Raspuns: 10

-> Exercitiul #1083 <-

Un graf neorientat are 6 noduri și fiecare dintre acestea are gradul egal cu 1. Indicați numărul de componente conexe ale grafului.

Raspuns: 3

-> Exercitiul #1084 <-

Un arbore cu rădăcină are 8 noduri, numerotate de la 1 la 8, și muchiile [1,3], [1,7], [1,8], [2,4], [3,5], [3,6], [4,5]. Știind că rădăcina arborelui este nodul numerotat cu 6, indicați nodurile de tip frunză ale arborelui dat.

Raspuns: 2,7,8

-> Exercitiul #1085 <-

Indicațio expresie C/C++ echivalentă cu următoarea: (x>5)&& (x<20) || (x!=y)

Raspuns: !(x<=5||x>=20)||(x!=y)

-> Exercitiul #1086 <-

Subprogramul f este definit mai jos. Indicați valoarea f(4770777,7).

int f (int n, int k)
{ if (n!=0)
    if(n%10==k)return 1+f(n/10,k);
  return 0;
}

Raspuns: 3

-> Exercitiul #1087 <-

Variabila x este declarată mai jos. Indicați secvența care, în urma executării, memorează în variabila x ziua, luna și anul corespunzătoare unei date calendaristice citite de la tastatură.

struct data
{
    int zi, luna, an;
} x

Raspuns: cin>>x.zi>>x.luna>>x.an;  |  scanf(”%d%d%d”,&x.zi,&x.luna,&x.an);

-> Exercitiul #1088 <-

Utilizând metoda backtracking, sunt generate toate numerele din intervalul [100,999], cu proprietatea că au cifrele în ordine crescătoare, cifrele aflate pe poziții consecutive sunt de paritate diferită, iar suma lor este egală cu 14. Scrieți toate numerele generate, în ordine crescătoare, separate prin exact un spațiu.

Raspuns: 149 167 347

-> Exercitiul #1089 <-

Variabilele s1 și s2 pot memora câte un șir de cel mult 50 de caractere. Scrieți ce se afișează în urma executării secvenței alăturate.

strcpy(s1,"bac2021");
strcpy(s2,s1+3); 
strcpy(s2+2,"20-");
strcat(s2,s1+3);
cout<<s2; | printf("%s",s2);

Raspuns: 2020-2021

-> Exercitiul #1176 <-

Un arbore cu 10 noduri, numerotate de la 1 la 10, este reprezentat prin vectorul de „tați” (0,1,1,1,2,3,3,7,4,6). Indicați numărul de frunze ale arborelui.

Raspuns: 4

-> Exercitiul #1177 <-

Un graf neorientat are 10 noduri, numerotate de la 1 la 10, și muchiile [1,4], [1,10], [2,3], [2,6], [2,9], [3,6], [4,10], [5,7], [5,8], [5,10], [7,8]. Indicați numărul minim de muchii care trebuie adăugate pentru ca graful obținut să aibă cel puțin un ciclu care să traverseze toate muchiile sale.

Raspuns: 2

-> Exercitiul #1178 <-

Subprogramul f este definit mai jos.

void f(int x)
{ while(x>1){ x=x-1; f(x-1);}
  cout<<x;  |  printf(”%d”,x);
}

Indicați ce se afișează în urma apelului:

f(4);

Raspuns: 01101

-> Exercitiul #1179 <-

Variabilele x și y sunt de tip întreg și memorează numere naturale nenule. Indicați o expresie C/C++ care are valoarea 1 dacă și numai dacă numărul memorat în x are cifra zecilor egală cu 2 și este un multiplu al numărului memorat în y.

Raspuns: x/10%10==2 && x%y==0

-> Exercitiul #1180 <-

Utilizând metoda backtracking se generează toate posibilitățile de a forma selecțiide câte 4 piese ale soliștilor/formațiilor din mulțimea {Bono, Bruce Springsteen, Bon Jovi, Leonard Cohen, Portugal.The Man}, astfel încât pe oricare două poziții alăturate să nu se afle două piese ale soliștilor/formațiilor din submulțimea {Bono, Bon Jovi, Portugal.TheMan}. Primele cinci selecții generate sunt, în această ordine, (Bono, Bruce Springsteen, Bono, Bruce  Springsteen), (Bono, Bruce Springsteen, Bono, Leonard Cohen), (Bono, Bruce Springsteen, Bruce Springsteen, Bono), (Bono, Bruce Springsteen, Bruce Springsteen, Bruce Springsteen), (Bono, Bruce Springsteen, Bruce Springsteen, Bon Jovi). Ultima selecție generată este:

Raspuns: (Portugal.The Man, Leonard Cohen, Portugal.The Man, Leonard Cohen)

-> Exercitiul #1181 <-

Un graf neorientat are 20 de noduri și 4 componente conexe, fiecare dintre acestea fiind arbore. Indicați numărul de muchii ale grafului.

Raspuns: 16

-> Exercitiul #1182 <-

Un graf neorientat are 6 noduri, numerotate de la 1 la 6, și muchiile [1,2], [1,3], [2,3], [2,4], [2,5], [2,6], [3,4], [4,5]. Indicați numărul nodurilor care au gradul un număr par.

Raspuns: 2

-> Exercitiul #1183 <-

Utilizând metoda backtracking, se generează toate modalitățile de forma un grup de patru persoane din mulțimea {Ana, Ioana, Lia, Maria, Miruna, Simona}. Două grupuri diferă prin cel puțin o persoană. Primele cinci soluții generate sunt, în această ordine: (Ana, Ioana, Lia, Maria), (Ana, Ioana, Lia, Miruna), (Ana, Ioana, Lia, Simona), (Ana, Ioana, Maria, Miruna), (Ana, Ioana, Maria,Simona). Indicați o enumerare generată ca soluție, în această formă.

Raspuns: (Ioana, Maria, Miruna, Simona)

-> Exercitiul #1184 <-

Expresia C/C++ !(a<2001) && (a<=2002) || (a>=2020) && !(a>2021) are valoarea 1 dacă și numai dacă valoarea memorată de variabila reală a aparține:

Raspuns: [2001,2002] ∪[2020,2021]

-> Exercitiul #1185 <-

Subprogramul afis este definit mai jos.

void afis (int a)
{ cout<<”+”;  |  printf(”+”);
  if(a>0)
  { afis(a/1000); 
    cout<<a;  |  printf(”%d”,a);
  }
  cout<<”+”;  |  printf(”+”);
}

Indicați ce se afișează în urma apelului:

afis(12345);

Raspuns: ++++12+12345+

-> Exercitiul #1186 <-

Scrieți ce se afișează în urma executării secvenței de mai jos, în care variabilele s și t permit memorarea câte unui șir de cel mult 50 de caractere.

strcpy(s,"vorbeste");
s[3]=s[0]; s[5]=s[2];s[0]=s[1]+1; s[2]=s[1]-2; s[6]=s[4]-1;
strcpy(t,s); t[3]='\0';
cout<<t<<" "<<s+3; | printf("%s %s",t,s+3);

Raspuns: pom verde

-> Exercitiul #1187 <-

Indicați o expresie C/C++ care are valoarea 1 dacă și numai dacă numărul memorat în variabila întreagă x aparține reuniunii de intervale [-21,-2]∪[2,21].

Raspuns: !(x<-21 || x>-2) || !(x<2 || x>21)

-> Exercitiul #1188 <-

Subprogramul f este definit mai jos.

void f (int x)
{ cout<<"*";  |  printf("*");
  if(x>0)
  { cout<<x;  |  printf("%d",x);
    f(x/100);
  }
  cout<<"/";  |  printf("/");
}

Indicați ce se afișează în urma apelului:

f(54321);

Raspuns: *54321*543*5*////

-> Exercitiul #1189 <-

Utilizând metoda backtracking, se generează toate modalitățile de a selecta un grup de patru muzee de vizitat în București, dintre cele aflate în mulțimea {Muzeul de Artă Veche Apuseană(MAVA), Muzeul Colecțiilor de Artă(MCA), Muzeul Căilor Ferate Române (MCFR), Muzeul Național al Hărților și Cărții Vechi(MNHCV), Muzeul Național al Literaturii Române(MNLR), Muzeul Național Tehnic(MNT)}. Două grupuri diferă prin cel puțin un muzeu. Primele cinci soluții generate sunt, în această ordine: (MAVA, MCA, MCFR, MNHCV), (MAVA, MCA, MCFR,MNLR), (MAVA, MCA, MCFR,MNT), (MAVA, MCA, MNHCV,MNLR), (MAVA, MCA, MNHCV,MNT). Indicați o enumerare care este generată ca soluție, în această ordine.

Raspuns: (MCA,MNHCV, MNLR, MNT)

-> Exercitiul #1190 <-

Un graf neorientat cu 5 noduri este reprezentat prin matricea de adiacență de mai jos. Indicați numărul de muchii care pot fi eliminate, astfel încât graful parțial obținut să fie arbore.

0 1 1 0 1 
1 0 1 0 0 
1 1 0 1 1 
0 0 1 0 1 
1 0 1 1 0

Raspuns: 3

-> Exercitiul #1191 <-

Un graf neorientat cu 7 noduri, numerotate de la 1 la 7, are mulțimea muchiilor {[2,3], [2,5], [2,6], [3,6], [4,7], [5,1], [6,5]}. Indicați numărul de subgrafuri ale sale, pentru fiecare dintre acestea mulțimea muchiilor fiind {[2,3], [2,6], [3,6]}.

Raspuns: 6

-> Exercitiul #1192 <-

Variabila s permite memorarea unui șir de cel mult 20 de caractere. Scrieți ce se afișează în urma executării secvenței de mai jos.

strcpy(s,"muzeu");
s[0]=s[0]+1;
cout<<s[1]<<s[0]<<" "; | printf("%c%c ",s[1],s[0]);
strcpy(s,"muzeu"+2);
cout<<s; | printf("%s",s);

Raspuns: un zeu

-> Exercitiul #1195 <-

Indicați o expresie C/C++ care are valoarea 1.

Raspuns: floor(20.21)/20

-> Exercitiul #1196 <-

Indicați o secvență de instrucțiuni care realizează interschimbarea valorilor variabilelor întregi x și y.

Raspuns: x=x+y; y=x-y; x=x-y;

-> Exercitiul #1197 <-

Toate variabilele din secvența de mai jos sunt de tip char. Scrieți ce se afișează în urma executării secvenței.

c1='m';c2='u';c3='z';c4='e';
c1=c1+1;
cout<<c2<<c1<<" ";| printf("%c%c ",c2,c1);cout<<c3<<c4<<c2; | printf("%c%c%c",c3,c4,c2);

Raspuns: un zeu

-> Exercitiul #1198 <-

Variabilele x și y sunt de tip întreg, x memorând valoarea 8, iar y valoarea 6. Indicați expresia C/C++ care are valoarea 0.

Raspuns: !(x/2+2==y)

-> Exercitiul #1199 <-

Subprogramul f este definit mai jos.

int f(int n)
{ int c;
  if (n==0) return 9;
  c=f(n/10); if (n%10<c) return n%10;
  return c;
}

Indicați valoarea f(38627).

Raspuns: 2

-> Exercitiul #1200 <-

Utilizând metoda backtracking se generează, în ordine crescătoare, toate numerele de câte 5 cifre, toate din mulțimea {1,2} cu proprietatea că nu există mai mult de două cifre 1 pe poziții consecutive. Primele 5 soluții generate sunt, în această ordine: 11211, 11212, 11221, 11222, 12112. Indicaţi cea de a 8-a soluţie generată.

Raspuns: 12211

-> Exercitiul #1201 <-

Un arbore are 10 noduri, numerotate de la 1 la 10, și muchiile [1,2], [1,3], [1,5], [1,6], [2,8], [2,9], [3,4], [3,10], [4,7]. Indicați lungimea unui lanț elementar care are ca extremități nodurile 6 și 7.

Raspuns: 4

-> Exercitiul #1202 <-

Indicați numărul grafurilor neorientate, distincte, cu 5 noduri, care se pot construi. Două grafuri sunt distincte dacă matricele lor de adiacență sunt diferite.

Raspuns: 2^10

-> Exercitiul #1203 <-

În secvenţa de mai jos, variabila i este de tip întreg, iar variabilele s și t pot memora câte un şir cu cel mult 20 de caractere. Scrieți ce se afișează pe ecran în urma executării secvenței.

strcpy(s,"sanataTEA");
cout<<strlen(s);
i=0;
while(i<strlen(s))
  if(s[i]=='a')
  { strcpy(t, s+i+1); strcpy(s+i, t);}
  else 
    i=i+1;
cout<<s;

Raspuns: 9sntTEA

-> Exercitiul #1208 <-

Algoritmul de mai jos este reprezentat în pseudocod. S-a notat cu a%b restul împărțirii numărului natural a la numărul natural nenul b și cu [c] partea întreagă a numărului real c.

citește n, k (numere naturale)
p←1
┌ cât timp n>0 execută
│ c←n%10
│┌ dacă k>0 atunci
││ ┌dacă c%2=1 atunci
││ │ p←p*c
││ └■
│└■
│ n←[n/10]
│ k←k-1
└■ scrie p

Scrieți valoarea care se afișează în urma executării algoritmului dacă se citesc, în această ordine, numerele 296385 și 3.

Raspuns: 15

-> Exercitiul #1209 <-

Algoritmul de mai jos este reprezentat în pseudocod. S-a notat cu a%b restul împărțirii numărului natural a la numărul natural nenul b și cu [c] partea întreagă a numărului real c.

citește n, k (numere naturale)
p←1
┌ cât timp n>0 execută
│ c←n%10
│┌ dacă k>0 atunci
││ ┌dacă c%2=1 atunci
││ │ p←p*c
││ └■
│└■
│ n←[n/10]
│ k←k-1
└■ scrie p

Dacă pentru k se citește numărul 4, scrieți cel mai mic și cel mai mare număr din intervalul [104,105) care pot fi citite pentru n, astfel încât, pentru fiecare dintre acestea, în urma executării algoritmului, să se afișeze 1.

Raspuns: 10000 98888

-> Exercitiul #1210 <-

În secvenţa de mai jos, variabila c memorează un caracter, iar variabilele i și k sunt de tip întreg.

k=0;
for(i=1;i<=9;i++)
{   cin>>c; | scanf("%c",&c);
    if(c=='a') k=k+1;
}

Scrieţi valoarea variabiei k în urma executării secvenţei, știind că se citesc de la tastatură, în această ordine, literele s a n a t a T E A

Raspuns: 3

-> Exercitiul #1211 <-

Indicați o expresie C/C++ care are valoarea 1 dacă și numai dacă numerele naturale memorate în variabilele întregi x și y sunt pare, consecutive.

Raspuns: ((x-y==2) || (y-x==2)) && (x%2==0)

-> Exercitiul #1212 <-

Subprogramul f este definit mai jos.

void f (int n, int k)
{ if (n!=0)
  { f(n/10,k+1);
    if(n%10==k) cout<<k;| printf(”%d”,k);
  }
}

Indicați ce se afișează în urma apelului:

f(7552021,1);

Raspuns: 7521

-> Exercitiul #1213 <-

Utilizând metoda backtracking se generează toate posibilitățile de a scrie numărul 10 ca sumă de numere prime. Soluțiile generate sunt, în această ordine: 2+2+2+2+2, 2+2+3+3, 2+3+5, 3+7, 5+5. Folosind aceeași metodă se generează toate posibilitățile de a scrie numărul 9 ca sumă de numere prime. Indicați a treia soluție generată.

Raspuns: 2+7

-> Exercitiul #1214 <-

Un arbore cu rădăcină, cu 9 noduri, numerotate de la 1 la 9, este reprezentat prin vectorul de „tați” (8,7,6,5,7,7,8,0,8). Indicați toți descendenții nodului 7.

Raspuns: 2,3,4,5,6

-> Exercitiul #1215 <-

Un graf neorientat are 6 noduri, numerotate de la 1 la 6, și muchiile [1,2], [1,3], [2,3], [2,4], [2,5], [2,6], [3,4], [4,5]. Indicați numărul nodurilor care au gradul un număr impar.

Raspuns: 4

-> Exercitiul #1216 <-

Variabila i este de tip întreg, iar variabila s permite memorarea unui șir cu cel mult 102 caractere. Scrieți ce se afișează pe ecran în urma executării secvenței următoare.

strcpy(s,"informatica");
cout<<strlen(s); | printf("%d",strlen(s));
for (i=0;i<strlen(s);i++)
  if (strchr("aeiou",s[i])!=NULL)
    s[i]= '*';
cout<<s; | printf("%s",s);

Raspuns: 11*nf*rm*t*c*

-> Exercitiul #1218 <-

Variabilele i și j sunt de tip întreg. Indicați expresia care poate înlocui punctele de suspensie astfel încât, în urma executării secvenței obținute, să se afișeze pe ecran valorile de mai jos, în această ordine.

for(i=1;i<=4;i++)
{ for(j=1;j<=5;j++)
    cout<<.........<<" "; | printf("%d ",.........);
  cout<<endl;  |  printf("\n");
}

1 2 3 4 5
2 4 6 8 0 
3 6 9 2 5 
4 8 2 6 0

Raspuns: (i * j) % 10

-> Exercitiul #1221 <-

Variabilele x și y sunt de tip întreg. Indicați o expresie C/C++ echivalentă cu expresia !(x<3 && y>5).

Raspuns: x>=3 || !(y>5)

-> Exercitiul #1222 <-

Subprogramul f este definit mai jos.

int f(int x, int y)
{   if(x==0) return 0;
    if(y==0) return 1;
    return x%2+y%2+f(x/10,y/10);
}

Indicați valoarea lui f(2121,19).

Raspuns: 4

-> Exercitiul #1223 <-

Pe parcursul vacanței au loc mai multe reprezentații online ale unei piese de teatru; pentru o reprezentație sunt necesari trei copii, unul pentru rolul principal, iar fiecare dintre ceilalți doi pentru câte un rol secundar. Pentru oricare două reprezentații distincte cel puțin un rol este atribuit, în cele două distribuții, unor copii diferiți. În urma audițiilor au fost selectați șase copii, Alex, Cezar, Tudor, Daria, Ela și Maria:doar Alex poate primi rolul principal, iar fiecare dintre ceilalți cinci copii poate interpreta oricare dintre cele două roluri secundare. De exemplu, pentru patru reprezentații sunt distribuiți, în ordinea rolurilor, copiii: (Alex, Ela, Maria), (Alex, Maria, Ela), (Alex, Maria, Cezar), (Alex, Cezar, Tudor). Indicați numărul maxim de reprezentații distincte în care poate fi distribuită Daria.

Raspuns: 8

-> Exercitiul #1224 <-

Un arbore cu 7 noduri, numerotate de la 1 la 7, are drept rădăcină nodul numerotat cu 4 și este reprezentat în figura alăturată. Indicați vectorul de “tați” al arborelui.

Raspuns: (7,4,5,0,4,5,4)

-> Exercitiul #1225 <-

Un graf neorientat are 10 noduri, numerotate de la 1 la 10, și muchiile [1,2], [2,3], [2,10], [3,10], [4,5], [4,6], [5,6], [6,9], [7,8], [7,9], [8,9]. Indicați numărul minim de muchii care trebuie adăugate pentru ca în graful obținut toate nodurile să aibă drept grade numere pare.

Raspuns: 2

-> Exercitiul #1231 <-

Variabile x și y sunt de tip întreg. Indicați o pereche de valori pentru care expresia următoare are valoarea 1: (x%100==y%100)&&(x>99)||(y>99)

Raspuns: x=1003 și y=3

-> Exercitiul #1232 <-

Subprogramele f1 și f2 sunt definite mai jos. Indicați valoarea f2(41382).

int f1(int c)
{ if (c%2==1) return 1; 
  else return 2; 
}

int f2(int n) 
{ if (n==0) return 0; 
  else returnf1(n%10)+f2(n/10);
}

Raspuns: 8

-> Exercitiul #1233 <-

Utilizând metoda backtracking se generează în ordine alfabetică anagramele cuvântului bine. Primele patru soluții generate sunt, în această ordine: bein, beni, bien, bine. Indicați a șaptea soluție generată.

Raspuns: ebin

-> Exercitiul #1234

Un arbore cu rădăcină, cu 7 noduri, numerotate de la 1 la 7, este reprezentat prin vectorul de „tați” (5,1,5,1,0,7,5). Indicați etichetele tuturor nodurilor de tip „frunză”.

Raspuns: 2 3 4 6

-> Exercitiul #1235 <-

Un graf neorientat are 5 noduri, etichetate cu câte o literă distinctă din cuvântul lista, în care orice nod etichetat cu o vocală este adiacent doar cu nodurile etichetate cu consoane, iar orice nod etichetat cu o consoană este adiacent doar cu nodurile etichetate cu vocale. Indicați numărul de muchii ale acestui graf.

Raspuns: 6

-> Exercitiul #1238 <-

Variabilele x și y sunt de tip întreg. Indicați o instrucțiune ce realizează o prelucrare echivalentă următoarea.

x=-abs(y);

Raspuns: 
if(y<0) x=y; 
else x=-y;

-> Exercitiul #1240 <-

Variabila x este de tip întreg și memorează un număr natural de cel puțin două cifre. Indicați o instrucțiune C/C++ în urma executării căreia se memorează în variabila x numărul obținut din valoarea sa inițială, prin inserarea cifrei 4 între cifra zecilor și cifra unităților.

Raspuns: x=(x/10*10+4)*10+x%10;

-> Exercitiul #1241 <-

Utilizând metoda backtracking se generează toate posibilitățile de a planta de-a lungul unei străzi cinci arbori din mulțimea {salcie,carpen,larice,fag,ulm}. Două soluții sunt diferite dacă ordinea arborilor diferă. Primele patru soluții obținute sunt, în această ordine: (salcie, carpen, larice, fag, ulm), (salcie, carpen, larice, ulm, fag), (salcie, carpen, fag, larice, ulm), (salcie, carpen, fag, ulm, larice). Indicați antepenultima soluție generată.

Raspuns: (ulm, fag, carpen, larice,salcie)

-> Exercitiul #1244 <-

În secvența de mai jos variabilele i și j sunt de tip întreg.

for(i=0;i<4;i++)
{ for(j=0;j<5;j++)
    cout<<.........<<" "; | printf("%d ",.........);
  cout<<endl;  |  printf("\n");
}

Indicați expresia care poate înlocui zona punctată astfel încât, în urma executării secvenței obținute, să se afișeze pe ecran valorile următoare:

0 1 2 0 1
1 2 0 1 2
2 0 1 2 0
0 1 2 0 1

Raspuns: (i+j) % 3

-> Exercitiul #1256 <-

Variabilele x și y sunt de tip real (x≠-2). Indicați o expresie C/C++ corespunzătoare expresiei aritmetice ((x+y)/5 + (x-y)/2) / (x+2).

Raspuns: ((x+y)/5+(x-y)/2)/(x+2)

-> Exercitiul #1257 <-

Subprogramul f este definit mai jos. Indicați valoarea lui f(1234).

int f(int n) 
{ if (n!=0) 
   return (n%2)*(n%10)+f(n/10); 
  return 0;  
}

Raspuns: 4

-> Exercitiul #1258 <-

Utilizând metoda backtracking se generează toate numerele formate din cifre distincte, cifre a căror sumă să fie 6. Primele patru soluții generate sunt, în această ordine: 1023, 1032, 105 și 1203. Indicați cea de a șasea soluție generată.

Raspuns: 1230

-> Exercitiul #1259 <-

Unui arbore cu 10 noduri i se adaugă o muchie, cu extremitățile în două dintre nodurile sale. Indicați numărul ciclurilor elementare pe care le conține graful obținut.

Raspuns: 1

-> Exercitiul #1260 <-

Un graf neorientat are 21 de noduri, numerotate de la 1 la 21; pentru oricare două noduri distincte ale sale, numerotate cu i, respectiv cu j, există muchia [i,j] dacă și numai dacă ultima cifră a lui i este egală cu ultima cifră a lui j. Indicați numărul valorilor nule din matricea de adiacență a grafului.

Raspuns: 21^2−2⋅12

-> Exercitiul #1263 <-

Variabila x este de tip real. Indicați o expresie C/C++ care are valoarea 1 pentru orice număr memorat în variabila x.

Raspuns: ceil(x)+1==ceil(x+1)

-> Exercitiul #1265 <-

Indicați o expresie C/C++ care are valoarea 1 dacă și numai dacă valorile variabilelor întregi x și y sunt numere pare.

Raspuns: x%2==0 && (y+1)%2!=0

-> Exercitiul #1266 <-

Subprogramul f este definit mai jos. Indicați valorile pe care le pot avea parametrii n și c, astfel încât, în urma apelului, f(n,c) să aibă valoarea 2021.

int f(int n,int c) 
{ if(n==0) return 0; 
  else  
    if(n%10==c) return f(n/10,c); 
    else return n%10+10*f(n/10,c); 
}

Raspuns: n=720721 și c=7

-> Exercitiul #1267 <-

Variabila m memorează elementele unui tablou bidimensional cu 100 de linii și 100 de coloane, numerotate de la 0 la 99. Indicați expresia C/C++ prin care poate fi accesat un element aflat pe diagonala secundară a tabloului.

Raspuns: m[42][57]

-> Exercitiul #1268 <-

Un graf neorientat are 6 noduri, numerotate de la 1 la 6, și muchiile [1,2], [1,3], [2,3], [3,4], [3,5], [4,5], [5,6]. Indicați un ciclu elementar al acestui graf.

Raspuns: 1,2,3,1

-> Exercitiul #1269 <-

Într-un arbore cu rădăcină un nod se află pe nivelul x dacă lanțul elementar care are o extremitate în nodul respectiv și cealaltă extremitate în rădăcina arborelui are lungimea x. Pe nivelul 0 se află un singur nod (rădăcina).

Într-un arbore cu rădăcină toate nodurile de pe același nivel au un număr egal de „fii” și nu există două niveluri diferite cu același număr de noduri. Indicați numărul minim de noduri de pe nivelul 3.

Raspuns: 8

-> Exercitiul #1271 <-

Variabilele întregi fa și fb memorează numărătorul, respectiv numitorul unei fracții. Indicați o secvență de instrucțiuni C/C++ care să memoreze în variabilele întregi sa și sb numărătorul, respectiv numitorul fracției obținute prin scăderea fracției menționate mai sus din fracția 2020/2021.

Raspuns: 
sa=2020*fb-2021*fa; 
sb=fb*2021;

-> Exercitiul #1272 <-

Variabilele x și y sunt de tip real, x are valoarea 3.5, iar y are valoarea 7.2. Indicați expresia C/C++ a cărei valoare este 3.

Raspuns: floor(y-x)

-> Exercitiul #1281 <-

Care dintre următoarele cuvinte este un identificator C++ corect?

Raspuns: x_1

-> Exercitiul #1282 <-

Adevărat sau fals: În C++ toate variabilele trebuie declarate.

Raspuns: Adevărat

-> Exercitiul #1283 <-

Care dintre propozițiile de mai jos este adevărată?

Raspuns: În C++ variabilele pot fi inițializate odată cu declararea.

-> Exercitiul #1284 <-

Adevărat sau fals: În C++ constantele reale au ca seprator zecimal caracterul virgulă ,.

Raspuns: Fals
