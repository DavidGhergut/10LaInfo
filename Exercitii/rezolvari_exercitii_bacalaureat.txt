-> Exercitiul #7 <-

Variabila x este de tip real. Care dintre următoarele expresii C/C++ are valoarea 1 dacă și numai dacă numărul real memorat în variabila x aparține intervalului (5,8]?

Raspuns: (x<=8) && (x>5)
-> Exercitiul #9 <-

Care dintre următoarele expresii C/C++ are valoarea 1 dacă și numai dacă numărul real memorat în variabila x se află în intervalul (-2,2)?

Raspuns: 4-x*x>0

-> Exercitiul #10 <- 

Care este rezultatul evaluării expresiei C/C++ următoare: 11*3/2*2/3?

Raspuns: 10

-> Exercitiul #11 <-

Variabila x este de tip real. Care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă numărul real memorat în variabila x nu aparţine intervalului (2,9]?

Raspuns: (x <= 2) || (x > 9)

-> Exercitiul #12 <-

Care dintre următoarele expresii C/C++ are ca valoare cel mai mic dintre numerele naturale nenule, cu cel mult 4 cifre fiecare, memorate în variabilele întregi x şi y?

Raspuns: (x + y - abs(x - y)) / 2

-> Exercitiul #13 <-

Fiecare dintre variabilele întregi x şi y memorează câte un număr natural. Care dintre expresiile C/C++ de mai jos are valoarea 1 dacă şi numai dacă numărul memorat în x este strict mai mare decât 0 şi numărul memorat în y este strict mai mare decât 5?

Raspuns: !(x*(y-5)<=0)

-> Exercitiul #14 <-

Care dintre următoarele expresii C/C++ are ca valoare cel mai mare dintre numerele naturale nenule, cu cel mult 4 cifre fiecare, memorate în variabilele întregi a şi b?

Raspuns: (a+b+abs(a-b))/2

-> Exercitiul #15 <-

Care dintre expresiile C/C++ de mai jos este echivalentă cu următoarea expresie ((a>3) && (a<15)) || (a!=b)?

Raspuns: !((a<=3) || (a>=15)) || (a!=b)

-> Exercitiul #16 <-

Variabilele x şi y sunt de tip întreg, x memorând valoarea 8, iar y valoarea 6. Care dintre expresiile C/C++ de mai jos are valoarea 0?

Raspuns: !(x/2+2==y)

-> Exercitiul #17 <-

Care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă variabilele x şi y memorează două numere naturale pare consecutive?

Raspuns: ((x-y==2) || (y-x==2)) && (x%2==0)

-> Exercitiul #18 <-

Care dintre expresiile C/C++ de mai jos este echivalentă cu expresia următoare !((a<5)&&(b>7)) ?

Raspuns: !(a<5) || !(b>7)

-> Exercitiul #19 <-

Pentru care dintre perechile de valori de mai jos expresia C/C++ următoare (a%100==b%100) && (a>99) || (b>99) are valoarea 1?

Raspuns: a=1003 si b=3

-> Exercitiul #20 <-

Variabilele x şi y sunt de tip întreg, x memorând valoarea 4, iar y valoarea 2. Care dintre expresiile C/C++ de mai jos are valoarea 0?

Raspuns: !(x==2*y)

-> Exercitiul #21 <-

Care dintre următoarele instrucţiuni C/C++ determină inserarea cifrei 7 în faţa ultimei cifre a unui număr natural, cu mai mult de 2 cifre, memorat în variabila x?

Raspuns: x=(x/10*10+7)*10+x%10;

-> Exercitiul #24 <-

Care dintre următoarele instrucţiuni C/C++ determină eliminarea cifrei din mijloc a unui număr natural, cu exact 5 cifre, memorat în variabila x?

Raspuns: x=x/1000*100+x%100;

-> Exercitiul #26 <-

Care este valoarea tipărită de secvenţa de program C/C++ de mai jos, ştiind că x şi y sunt variabile întregi, iar z este o variabilă reală?

x=30;
y=5;
z=(x+y)/6.0;
z=floor(z*100);
z=z/100;
cout<<z; | printf(“%0.2f”,z);

Raspuns: 5.83

-> Exercitiul #27 <-

Care dintre următoarele expresii C/C++ are valoarea 1 după executarea secvenţei de
instrucţiuni de mai jos, în care toate variabilele sunt întregi?

v1=0; v2=0;
for(i=1;i<=3;i++)
{ for (j=1;j<=i;j++)
 v1=v1+1;
 for (k=i;k<=3;k++)
 v2=v2+1;
}

Raspuns: v1==v2

-> Exercitiul #28 <-

Care este valoarea expresiei C/C++ de mai jos dacă variabilele întregi a, b, c au valorile a=20, b=3, c=5?

(a/b%c<=b)||!(b==a)

Raspuns: 1

-> Exercitiul #29 <-

Care dintre expresiile C/C++ de mai jos este echivalentă cu !((a<=b && a>=c) || a<=d)?

Raspuns: (a>b || a<c) && a>d

-> Exercitiul #30 <-

Care din următoarele afirmaţii despre operatorii din C/C++ este falsă?

Raspuns: <= este operator logic

-> Exercitiul #32 <-

Care este cea mai mică valoare pe care o poate avea expresia C/C++ de mai jos dacă variabila x, de tip int, memorează un număr natural cu o singură cifră?

x/7-x%7

Raspuns: -6

-> Exercitiul #33 <-

În expresia C/C++ x%2+(x+1)%2 variabila x este de tip întreg. Această expresie:

Raspuns: are valoarea 1 pentru orice numar natural x

-> Exercitiul #34 <-

Câte valori distincte, numere naturale, poate primi variabila x pentru ca valoarea expresiei x/2/2 scrisă în C/C++ să fie egală cu 1?

Raspuns: 4

-> Exercitiul #35 <-

Care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă numărul natural nenul memorat în variabila x, de tip int, este divizibil cu 100?

Raspuns: x%10+x/10%10==0

-> Exercitiul #36 <-

Care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă numărul natural memorat de variabila x de tip int are exact două cifre?

Raspuns: x/100==0 && x/10!=0

-> Exercitiul #37 <-

Se consideră variabila a care memorează un număr cu exact 6 cifre. Care dintre expresiile C/C++ de mai jos are ca valoare numărul format din cele două cifre din mijloc ale valorii memorate în a?

Raspuns: a/100#100

-> Exercitiul #38 <-

Stabiliţi care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă numărul întreg memorat în variabila x nu aparţine intervalului (-35,-20)∪[17,100].

Raspuns: (x<=-35) || ((x<=16) && (x>=-20)) || (x>100)

-> Exercitiul #39 <-

Variabila a memorează un număr natural care are exact 3 cifre. Care dintre expresiile C/C++ de mai jos are ca valoare numărul format din prima şi ultima cifră a numărului memorat de a?

Raspuns: a/100*10+a%10

-> Exercitiul #41 <-

Stabiliţi care dintre următoarele expresii C/C++ are valoarea 1 dacă şi numai dacă numărul întreg memorat în variabila x nu aparţine intervalului (-35,-20].

Raspuns: (x<=-35) || (x>-20)

-> Exercitiul #43 <-

Care este valoarea pe care trebuie să o aibă iniţial variabila întreagă x pentru ca, în urma executării secvenţei de mai jos, să se afişeze HHHHHH?

while (x!=3){
  x=x-1;
  cout<<"HH"; | printf(”HH”);
}

Raspuns: 6

-> Exercitiul #44 <-

Care dintre expresiile următoare, scrise în limbajul C/C++, are valoarea 1 dacă şi numai dacă valorile variabilelor întregi x şi y sunt numere pare?

Raspuns: (x%2==0) && (y%2==0)

-> Exercitiul #45 <-

Care este numărul total de atribuiri efectuate la executarea secvenţei de instrucţiuni de mai jos?

x=4; y=6;
while (y==6) y=y+1;
if (x==y) x=x+1;

Raspuns: 3

-> Exercitiul #46 <-

Care este valoarea expresiei C/C++ de mai jos?

50-(100–300/2/(2+3))

Raspuns: -20

-> Exercitiul #47 <-

Ştiind că variabilele x şi y sunt de tip întreg, care este instrucţiunea prin care variabilei x i se atribuie ultima cifră a numărului natural memorat în variabila y?

Raspuns: y=x%10

-> Exercitiul #48 <-

Ştiind că variabilele x şi y sunt de tip întreg, care este instrucţiunea prin care variabilei x i se atribuie cifra zecilor numărului natural cu cel puţin două cifre memorat de variabila y?

Raspuns: x=y/10%10

-> Exercitiul #49 <-

Care este instrucţiunea prin care variabilei x i se atribuie valoarea sumei cifrelor numărului natural format din exact trei cifre, memorat de variabila întreagă y?

Raspuns: x=y/100+y/10%10+y%10

-> Exercitiul #50 <-

Care este instrucțiunea prin care variabilei întregi x i se atribuie valoarea cifrei sutelor numărului natural cu cel puţin 4 cifre memorat în variabila întreagă y?

Raspuns: x=y/100%10;

-> Exercitiul #51 <-

Care este instrucţiunea prin care variabilei x i se atribuie numărul obţinut prin inversarea ordinii cifrelor numărului natural format din exact 2 cifre, memorat în variabila întreagă y?

Raspuns: x=y%10*10+y/10;

-> Exercitiul #52 <-

Variabila întreagă n memorează un număr natural impar. Care dintre următoarele expresii C/C++ are valoarea 1?

Raspuns: n%2!=0

-> Exercitiul #53 <-

Care dintre următoarele variabile nu îşi modifică valoarea în urma executării secvenţei de instrucţiuni de mai jos, oricare ar fi valorile lor iniţiale? (a, b, c sunt variabile de tip int).

Raspuns: doar a si b

-> Exercitiul #54 <-

Variabilele a, b şi c, de tip int, pot fi iniţializate cu oricare numere naturale impare distincte. Ştiind că c este divizor al lui a, iar b nu este multiplu al lui c, care dintre următoarele expresii scrise în C/C++ are valoare 1?

Raspuns: !((a % c != 0) || !(b % c != 0))

-> Exercitiul #55 <-

Variabila a, de tip int, memorează un număr natural impar, iar variabila b, de tip int, memorează un număr natural par. Care dintre următoarele expresii C/C++ are valoarea 1?

Raspuns: !(!(a%2) || b%2)

-> Exercitiul #56 <-

Variabilele a şi b sunt de tip int, iar variabilele c şi d sunt de tip double. Care dintre următoarele instrucţiuni de atribuire nu este corectă din punct de vedere sintactic?

Raspuns: c=2-d%2*a;

-> Exercitiul #57 <-

Variabila întreagă x memorează un număr natural cu exact 4 cifre. Care dintre următoarele instrucţiuni C/C++ determină, în urma executării, eliminarea cifrei sutelor numărului memorat de variabila x?

Raspuns: x=x/1000*100+x%100;

-> Exercitiul #58 <-

Cărui interval îi aparţine valoarea memorată de variabila reală x astfel încât expresia următoare, scrisă în limbajul C/C++, să aibă valoarea 1?

(x<=-2) || (x>-1) && !(x>=1) || (x>50)

Raspuns: (-∞,-2] ∪ (-1,1) ∪ (50, ∞)

-> Exercitiul #59 <-

Variabila întreagă x memorează un număr natural. Care dintre următoarele expresii C/C++ are valoarea 0 dacă şi numai dacă numărul memorat de x NU este divizibil cu 3?

Raspuns: (1-x%3)*(2-x%3)

-> Exercitiul #60 <-

Cărui interval îi aparţine valoarea memorată de variabila reală x astfel încât expresia următoare, scrisă în limbajul C/C++, să aibă valoarea 1?

!((x<=1) || (x>50))

Raspuns: (1,50]

-> Exercitiul #61 <-

Care dintre următoarele expresii C/C++ este echivalentă cu !((x>=5)&&(x<10))?

Raspuns: (x<5) || (x>=10)

-> Exercitiul #146 <-

Într-un tablou bidimensional A, cu n linii şi n coloane, notăm cu Aij elementul aflat pe linia i şi coloana j (1≤i≤n, 1≤j≤n). Care este valoarea expresiei j-i dacă elementul Aij este situat pe diagonala principală a tabloului A?

Raspuns: 0

-> Exercitiul #157 <-

În secvenţa de mai jos, variabilele i şi j sunt de tip întreg, iar variabila a memorează o matrice în care prima linie şi prima coloană sunt numerotate cu 0. Toate elementele matricei primesc valori în urma executării secvenţei.

Scrieţi în ordine, începând cu prima linie, separate prin exact un spațiu, doar elementele situate pe cea de-a treia coloană a matricei.

for(j=0;j<6;j++)
  for(i=0;i<4;i++)
    a[i][j]=2*i+j;

Raspuns: 2 4 6 8

-> Exercitiul #161 <-

În secvenţa de mai jos, variabilele i şi j sunt de tip întreg, iar variabila a memorează o matrice în care prima linie şi prima coloană sunt numerotate cu 1. Toate elementele matricei primesc valori în urma executării secvenţei.

Scrieţi în ordine, începând cu prima coloană, separate prin exact un spațiu, doar elementele situate pe cea de-a doua linie a matricei.

for(j=1;j<=6;j++)
  for(i=3;i>=1;i--)
    a[i][j]=i+j;

Raspuns: 3 4 5 6 7 8

-> Exercitiul #212 <-

Fiind dat un tablou bidimensional cu 20 linii şi 20 coloane, câte elemente se găsesc strict deasupra diagonalei secundare a tabloului?

Raspuns: 190

-> Exercitiul #253 <-

În secvenţa de program următoare, variabila a memorează elementele unui tablou
bidimensional cu 5 linii (numerotate de la 1 la 5) şi 5 coloane (numerotate de la 1 la 5), iar celelalte variabile sunt de tip întreg.

x=0;
for (i=1;i<=5;i++)
  if(a[i][i]%2!=0)
    x=x+a[i][6-i];
      cout<<x;

Ce valoare se va afişa în urma executării secvenţei dacă se prelucrează tabloul bidimensional de mai jos?

1 2 3 4 2
6 7 8 9 4
1 2 0 4 3
7 2 1 4 5
1 2 3 4 5

Raspuns: 12

-> Exercitiul #319 <-

Pentru o matrice t cu 8 linii şi 8 coloane, numerotate de la 0 la 7, cu elemente numere întregi, secvenţa de program de mai jos, în care variabilele z, i şi j sunt de tip întreg, determină, în urma executării ei, memorarea în z a
sumei tuturor elementelor situate:

z=0;
for(i=0;i<8;i++)
  for(j=0;j<i;j++)
    z=z+t[i][j];

Raspuns: strict sub diagonala principală

-> Exercitiul #323 <-

Pentru o matrice t cu 8 linii şi 8 coloane, numerotate de la 0 la 7, cu elemente numere întregi, secvenţa de program următoare, în care variabilele z, i şi j sunt de tip întreg, determină, în urma executării ei, memorarea în z a sumei
tuturor elementelor situate:

z=0;
for(i=0;i<8;i++)
  for(j=0;j<8-i;j++)
    z=z+t[i][j];

Raspuns: deasupra diagonalei secundare, inclusiv diagonala secundară

-> Exercitiul #376 <-

Utilizând metoda backtracking se generează în ordine lexicografică cuvintele de câte patru litere din mulţimea A={a,b,c,d,e}, cuvinte care nu conţin două vocale alăturate. Primele opt cuvinte generate sunt, în ordine: abab, abac, abad, abba, abbb, abbc, abbd, abbe.

Câte dintre cuvintele generate încep cu litera b şi se termină cu litera e?

Raspuns: 15

-> Execitiul #377 <-

Utilizând metoda backtracking se generează în ordine lexicografică cuvintele de câte patru litere din mulţimea A={a,b,c,d,e}, cuvinte care nu conţin două vocale alăturate. Primele opt cuvinte generate sunt, în ordine: abab, abac, abad, abba, abbb, abbc, abbd, abbe.

Care este ultimul cuvânt generat?

Raspuns: eded

-> Exercitiul #378 <-

Utilizând metoda backtracking se generează în ordine lexicografică cuvintele de câte patru litere din mulţimea A={a,b,c,d,e}, cuvinte care nu conţin două vocale alăturate. Primele opt cuvinte generate sunt, în ordine: abab, abac, abad, abba, abbb, abbc, abbd, abbe.

Care este penultimul cuvânt generat?

Raspuns: edec

-> Exercitiul #379 <-

Utilizând metoda backtracking se generează în ordine lexicografică cuvintele de câte patru litere din mulţimea A={a,b,c,d,e}, cuvinte care nu conţin două vocale alăturate. Primele opt cuvinte generate sunt, în ordine: abab, abac, abad, abba, abbb, abbc, abbd, abbe.

Care este antepenultimul cuvânt generat?

Raspuns: edeb

-> Exercitiul #380 <-

Folosind modelul combinărilor se generează numerele naturale cu câte trei cifre distincte din mulţimea {1,2,3,7}, numere cu cifrele în ordine strict crescătoare, obţinându-se, în ordine: 123, 127, 137, 237. Dacă se utilizează exact aceeaşi metodă pentru a genera numerele naturale cu patru cifre distincte din mulţimea {1,2,3,4,5,6,7,8}, câte dintre numerele generate au prima cifră 2 şi ultima cifră 7?

Raspuns: 6

-> Exercitiul #381 <-

Utilizând metoda backtracking sunt generate numerele de 3 cifre, având toate cifrele distincte şi cu proprietatea că cifrele aflate pe poziţii consecutive sunt de paritate diferită. Ştiind că primele şase soluţii generate sunt, în această ordine, 103, 105, 107, 109, 123, 125, care este a zecea soluţie generată?

Raspuns: 145

-> Exercitiul #382 <-

Folosind tehnica bactracking un elev a scris un program care generează toate numerele de câte n cifre (0<n≤9), cifrele fiind în ordine strict crescătoare. Dacă n este egal cu 5, scrieți în ordine crescătoare, separate prin câte un spațiu, toate numerele având cifra unităților 6, care vor fi generate de program.

Raspuns: 12346 12356 12456 13456 23456

-> Exercitiul #383 <-

Utilizând metoda backtracking sunt generate numerele de 3 cifre, având toate cifrele în ordine strict crescătoare şi cu proprietatea că cifrele aflate pe poziţii consecutive sunt de paritate diferită. Ştiind că primele cinci soluţii generate sunt, în această ordine, 123, 125, 127, 129, 145, care este cel de al 8-lea număr generat?

Raspuns: 167

-> Exercitiul #384 <-

Utilizând metoda backtracking, sunt generate în ordine crescătoare toate numerele de 3 cifre, astfel încât cifrele sunt în ordine crescătoare, iar cifrele aflate pe poziţii consecutive sunt de paritate diferită. Ştiind că primele trei soluţii generate sunt, în această ordine, 123, 125, 127, scrieţi în ordine crescătoare, separate prin câte un spațiu toate numerele generate care au suma cifrelor egală cu 12.

Raspuns: 129 147 345

-> Exercitiul #385 <-

Un elev a scris un program care, folosind metoda backtracking, generează toate numerele de câte 5 cifre, cifrele fiind în ordine strict crescătoare. Scrieţi în ordine crescătoare, separate prin câte un spațiu toate numerele generate de program care au prima cifră 5.

Raspuns: 56789

-> Exercitiul #476 <-

Indicați expresia C/C++ care are valoarea 1 dacă şi numai dacă numărul natural memorat în variabila întreagă n este divizibil cu 2, dar NU şi cu 5.

Raspuns: !((n%2==1) || (n%5==0))

-> Exercitiul #498 <-

Valoare expresiei C/C++ 42/10*29/10 este:

Raspuns: 11

-> Exercitiul #503 <-

Variabila x este de tip întreg și poate memora un număr natural cu cel mult două cifre. Valoarea maximă pe care o poate avea expresia C/C++ x%7 este:

Raspuns: 6

-> Exercitiul #518 <-

Valoarea expresiei C/C++ 7+5/2  este

Raspuns: 9

-> Exercitiul #524 <-

Indicaţi expresia care are valoarea 1 dacă şi numai dacă numărul memorat în variabila întreagă x are exact două cifre, iar cifra unităţilor este nenulă.

Raspuns: (x/10)*(x%10)!=0 && x/100==0

-> Exercitiul #549 <-

Expresia C/C++ !(-20>=x) && (x<=-10) || (x>=-5) && !(x>5) are valoarea 1 dacă şi numai dacă valoarea memorată de variabila reală x aparține reuniunii de intervale:

Raspuns: (-20,-10] ∪ [-5,5]

-> Exercitiul #638 <-

Indicaţi expresia C/C++ care are valoarea 1 dacă şi numai dacă numărul memorat în variabila întreagă x aparţine mulţimii {2015, 2016, 2017}.

Raspuns: x==2015 || !(x<2016 || x>2017)

-> Exercitiul #661 <-

Se consideră algoritmul de mai jos, reprezentat în pseudocod.

citeşte m,n,x
    (numere natural nenule, m<n)
p ← 0
┌cât timp m<n şi p=0 execută
│┌dacă m%x=0 şi n%x=0 atunci
││ p x
││altfel
││┌dacă m%x=0 atunci
│││ n n-1
│││altfel
│││ m m+1
││└■
│└■
└■
scrie m,’ ’,n

S-a notat cu a%b restul împărţirii numărului natural a la numărul natural nenul b.

Scrieţi valorile afişate în urma executării algoritmului dacă se citesc, în această ordine, numerele 11, 30 și 7.

Raspuns: 14 28

-> Exercitiul #786 <-

Indicaţi expresia C/C++ care are valoarea 1 dacă şi numai dacă numărul natural memorat în variabila întreagă x are exact trei cifre.

Raspuns: x/1000==0 && x/100!=0

-> Exercitiul #791 <-

Indicaţi expresia C/C++ care are valoarea 1 dacă şi numai dacă numărul natural memorat în variabila întreagă x are exact o cifră.

Raspuns: x%10==x

-> Exercitiul #798 <-

Se consideră algoritmul de mai jos, reprezentat în pseudocod. S-a notat cu a%b restul împărțirii numărului natural a la numărul natural nenul b.

citeşte a,b
   (numere naturale, a≥2, b≥2) 
┌dacă a>b atunci 
│ x←a  
│ a←b 
│ b←x 
└■
 s←0 
┌pentru x←a,b execută
│ c←2 
│┌cât timp x%c>0 execută
││ c←c+1 
│└■
│s←s+c 
└■
scrie s 

Scrieți valoarea afișată dacă se citesc, în această ordine, numerele 7, 4.

Raspuns: 16

-> Exercitiul #812 <-

Se consideră algoritmul de mai jos, reprezentat în pseudocod. S-a notat cu a%b restul împărțirii numărului natural a la numărul natural nenul b.

citeşte m,n,x 
(numere natural nenule, m<n)
 p←0 
┌cât timp m<n şi p=0 execută
│┌dacă m%x=0 şi n%x=0 atunci 
││ p←x 
││altfel 
││┌dacă m%x=0 atunci  
│││ n←n-1 
│││altfel 
│││ m←m+1 
││└■
│└■
└■
 scrie m,’ ’,n 

Scrieți valorile afişate în urma executării algoritmului dacă se citesc, în această ordine, numerele 11, 30 și 7.

Raspuns: 14 28

-> Exercitiul #813 <-

O expresie C/C++ care are valoarea 1 este:

Raspuns: ceil(6.15)>floor(5.61)

-> Exercitiul #814 <-

Se consideră secvenţa de mai jos, în care toate variabilele sunt de tip întreg.

i=2;
while(.....)
{ if(x%i==0) cout<<i<<’ ’;
i=i+1;
}

Pentru a afişa în ordine crescătoare toţi divizorii pozitivi ai numărului natural nenul memorat în variabila x, cu excepţia lui 1 şi a numărului respectiv, o expresie care poate înlocui punctele de suspensie este:

Raspuns: i<=x/2

-> Exercitiul #815 <-

În secvenţa de instrucţiuni de mai jos toate variabilele sunt de tip întreg.

for(i=0;i<5;i++)
{ for(j=0;j<5;j++)
    if(...........)
      cout<<″1 ″;
    else
      cout<<″2 ″;
  cout<<endl;
}

Indicaţi o expresie care poate înlocui punctele de suspensie astfel încât, în urma executării secvenţei obţinute, să se afişeze pe ecran valorile din figura de mai jos, în această ordine.

1 1 1 1 1
1 2 2 2 1
1 2 2 2 1
1 2 2 2 1
1 1 1 1 1

Raspuns: (4-i)%4==0 || (4-j)%4==0

-> Exercitiul #816 <-

Se consideră două tablouri unidimensionale A și B: A=(1,7,9) și B=(5,7,8,12).

Determinaţi elementele unui tablou obținut prin interclasarea tablourilor A și B.

Scrieţi elementele tabloului determinat în ordinea din acesta, separate prin exact un spaţiu.

Raspuns: 1 5 7 7 8 9 12

-> Exercitiul #817 <-

În secvenţa de instrucţiuni de mai jos toate variabilele sunt de tip întreg.

for(i=0;i<5;i++)
{ for(j=0;j<5;j++) 
    cout<<.........;
  cout<<endl; 
}

Indicaţi o expresie care poate înlocui punctele de suspensie astfel încât, în urma executării secvenţei obţinute, să se afişeze pe ecran valorile din figura de mai jos, în această ordine.

0 0 1 1 2
0 1 1 2 2 
1 1 2 2 3 
1 2 2 3 3 
2 2 3 3 4

Raspuns: (i+j)/2

-> Exercitiul #818 <-

Indicați expresia C/C++ care are valoarea 1 dacă și numai dacă numărul întreg memorat în variabila întreagă x aparține reuniunii de intervale [-4,-2] ∪ [2,4].

Raspuns: abs(x)>=2 && abs(x)<=4

-> Exercitiul #819 <-

Variabile x și y sunt de tip întreg și memorează numere naturale nenule. Indicați instrucțiunea care poate înlocui punctele de suspensie, astfel încât în urma executării secvenței obţinute să se interschimbe valorile inițiale ale variabilelor x și y.

Raspuns: x=x*y;

-> Exercitiul #820 <-

Indicați o expresie C/C++ care are valoarea 1 dacă și numai dacă numărul întreg memorat în variabila întreagă x aparține mulțimii {-2,-1,1,2}.

Raspuns: abs(x)<=2 && x!=0

-> Exercitiul #821 <-

Variabilele x, y și d sunt de tip întreg și memorează câte un număr natural strict pozitiv. Indicați o expresie care poate înlocui punctele de suspensie astfel încât, în urma executării secvenței obținute, variabila d să memoreze cel mai mare divizor comun al valorilor memorate în variabilele x și y.

d=x;
if(d>y) d=y; 
while(........) 
    d=d-1;

Raspuns: x%d+y%d!=0

-> Exercitiul #822 <-

Tablourile unidimensionale A și B au elementele: A=(20,17,12,10,3), iar B=(45,16,12,7,2) . În urma interclasării lor în ordine descrescătoare se obține tabloul cu elementele:

Raspuns: (45,20,17,16,12,12,10,7,3,2)

-> Exercitiul #912 <-

Indicați expresia C/C++ care are valoarea 1 dacă și numai dacă valorile variabilelor întregi x și y sunt nenule și au același semn.

Raspuns: x*y>0

-> Exercitiul #914 <-

Variabila x este de tip întreg. Indicați o expresie care are valoarea 1 dacă și numai dacă expresia C/C++ x<=3 || x>10 are valoarea 1.

Raspuns: !(x>3) || !(x<=10)

-> Exercitiul #976 <-

Variabilele di și dj sunt de tip întreg. Indicați expresia C/C++ care are valoarea 1 dacă și numai dacă perechea (di,dj) este una dintre următoarele: (-2,-1), (-2,1), (-1,-2), (-1,2), (1,-2), (1,2), (2,-1), (2,1).

Raspuns: abs(di)*abs(dj)==2

-> Exercitiul #977 <-

În secvențele de mai jos, notate cu S1, S2 și S3, toate variabilele sunt întregi, iar variabila n memorează un număr natural cu cel mult nouă cifre.

//S1
if(n==0) p=1; 
else 
  if (n%2==0) p=6; 
  else p=4;

//S2
p=1; 
for(i=1;i<=n;i++) 
  p=(p*4)%10;

//S3
p=1; 
for(i=1;i<=n;i++) 
  p=(p%10)*4;

Variabila p memorează ultima cifră a numărului 4n în urma executării, independent, a secvențelor:

Raspuns: S1 si S2

-> Exercitiul #978 <-

Se consideră două tablouri unidimensionale A și B: A=(21,18,14,11,4) , iar B=(46,17,14,8,3). În urma interclasării lor în ordine descrescătoare se obține tabloul cu elementele:

Raspuns: (46,21,18,17,14,14,11,8,4,3)

-> Exercitiul #993 <-

În urma interclasării în ordine crescătoare a tablourilor A și B se obține tabloul cu elementele (10,12,23,25,2019,2209), în această ordine. Elementele tablourilor A și B pot fi (în ordinea memorării lor în tablou):

Raspuns:  
A=(10,2019)
B=(2209,25,23,12)

-> Exercitiul #995 <-

Indicați expresia C/C++ cu valoarea 1.

Raspuns: 19/21*3==3/19*21

-> Exercitiul #1045 <-

Variabila x este de tip întreg și poate memora un număr natural din intervalul [0,109). Indicați valoarea maximă pe care o poate avea expresia C/C++ x%2020.

Raspuns: 2019

-> Exercitiul #1046 <-

Subprogramul f este definit mai jos.

void f(int x){  
    cout<<"*";
    if(x>5) f((x+1)/2); 
}

Indicați apelul în urma căruia simbolul * se afișează de trei ori.

Raspuns: f(17);

-> Exercitiul #1047 <-

Utilizând metoda backtracking se generează toate modalitățile de a prepara o băutură din câte 3 sau 4 tipuri de fructe distincte din mulțimea {căpșune, mere, pepene, pere, portocale}. Primele patru soluții generate sunt, în această ordine: (căpșune, mere, pepene), (căpșune, mere, pepene, pere), (căpșune, mere, pepene, portocale), (căpșune, mere, pere). Indicați cea de a șasea soluție generată.

Raspuns: (căpșune, mere, portocale)

-> Exercitiul #1048 <-

Un arbore cu 9 noduri, numerotate de la 1 la 9, este reprezentat prin vectorul de „tați” (8,6,4,2,3,0,4,2,7). Indicați un „frate” al nodului 4.

Raspuns: 8

-> Exercitiul #1049 <-

Un graf neorientat eulerian cu 5 noduri are un nod cu gradul 4. Indicați numărul minim de muchii ale grafului.

Raspuns: 6

-> Exercitiul #1050 <-

Tablourile unidimensionale A și B au elementele: A=(2,22,25,32,48), iar B=(3,5,8,45,60). Indicați succesiunea de valori care pot fi, în această ordine, elementele tabloului obținut în urma interclasării lui A și B în ordine crescătoare.

Raspuns: (2,3,5,8,22,25,32,45,48,60)

-> Exercitiul #1051 <-

Pentru a verifica dacă într-un tablou unidimensional există elementul cu valoarea x=0, se aplică metoda căutării binare, iar succesiunea de elemente ale tabloului a căror valoare se compară cu valoarea lui x pe parcursul aplicării metodei indicate este: 20, 2, 0. Indicați succesiunea de valori care pot fi, în această ordine, elementele tabloului.

Raspuns: (0,2,4,20,30,32,40)

-> Exercitiul #1052 <-

Variabilele A , B și C sunt de tip real și memorează coeficienții unei ecuații de gradul al II-lea Ax2+Bx+C=0. Indicați expresia C/C++ care calculează valoarea discriminantului ecuației (B2-4·A·C).

Raspuns: pow(B,2)-4*A*C

-> Exercitiul #1053 <-

În secvența de mai jos toate variabilele sunt de tip întreg și memorează numere naturale.

y=1; 
x=2;
while(n>0) 
  if(..........) { y=y*x; n=n-1; }
  else { x=x*x; n=n/2; }

Indicați expresia care poate înlocui punctele de suspensie astfel încât, în urma executării secvenței obținute, variabila y să memoreze valoarea 2n.

Raspuns: n%2==1

-> Exercitiul #1054 <-

Indicați valoarea expresiei C/C++ de mai jos:

3+5.0/2+2

Raspuns: 7.5

-> Exercitiul #1055 <-

Variabila v memorează un tablou unidimensional cu 4 elemente, numerotate începând de la 0.
Subprogramul f este definit mai jos.

void f(int i, int v[4]) { 
    if(i>=3) v[i]=v[i]+1;
    else f(i+1,v);
    cout<<v[i];  |  printf("%d",v[i]); 
} 

Indicați setul de elemente pe care le poate avea tabloul memorat în v, în ordinea în care apar în acesta, astfel încât, în urma apelului de mai jos, să se afișeze pe ecran 2020.

f(0,v);

Raspuns: 0,2,0,1

-> Exercitiul #1056 <-

Utilizând metoda backtracking se generează toate variantele prin care patru persoane pot plăti o consumație totală de 200 de lei în următoarele condiții:

fiecare plătește o sumă nenulă, divizibilă cu 10;
primul plătește mai mult decât al doilea, al doilea mai mult decât al treilea, iar acesta mai mult decât al patrulea.
O soluție constă în patru valori, reprezentând, în ordine, sumele plătite de fiecare dintre cele patru persoane. Primele patru soluții generate sunt, în această ordine: (70, 60, 40, 30), (70, 60, 50, 20), (80, 50, 40, 30), (80, 60, 40, 20). Indicați cea de a șasea soluție, în ordinea generării acestora.

Raspuns: (80,70,30,20)

-> Exercitiul #1057 <-

Un arbore cu 10 noduri, numerotate de la 1 la 10, este reprezentat prin vectorul de „tați” (7,5,6,5,7,0,6,3,3,8). Indicați numărul de noduri „frunză” ale acestui arbore.

Raspuns: 5

-> Exercitiul #1058 <-

Un graf neorientat cu 5 noduri este reprezentat prin matricea de adiacență de mai jos. Indicați numărul grafurilor parțiale conexe ale acestuia care sunt diferite de graful dat.

0 1 0 1 1
1 0 1 0 0
0 1 0 1 0
1 0 1 0 0
1 0 0 0 0

Raspuns: 4

-> Exercitiul #1059 <-

În secvența de mai jos, toate variabilele sunt de tip întreg.

for(i=0;i<7;i++) 
{ for(j=0;j<7;j++)
     if(...........) cout<<′′< ′′; | printf(′′< ′′);     
     else cout<<′′> ′′; | printf(′′> ′′); 
  cout<<endl;  |  printf(′′\n′′); 
}

Indicați expresia care poate înlocui punctele de suspensie astfel încât, în urma executării secvenței obținute, să se afișeze pe ecran caracterele din figura de mai jos, în această ordine.

Raspuns: j<i && i+j>6

-> Exercitiul #1060 <-

Tablourile unidimensionale A și B au elementele: A=(2,20,25,36,50), iar B=(4,5,8,45,60). Indicați succesiunea de valori care pot fi, în această ordine, elementele tabloului obținut în urma interclasării lui A și B în ordine descrescătoare.

Raspuns: (60,50,45,36,25,20,8,5,4,2)

-> Exercitiul #1061 <-

Variabila x este de tip întreg. Indicați valoarea maximă din intervalul [0,102) pe care o poate avea x, astfel încât expresia C/C++ sqrt(x)==floor(sqrt(x)) să aibă valoarea 1.

Raspuns: 81

-> Exercitiul #1062 <-

În secvența de mai jos toate variabilele sunt de tip întreg și memorează numere naturale.

y=1; x=10; n=8; 
while(n>0)
  if(n%2==0)
  { x=x*x;
    n=.......;  
  }
  else
  { y=y*x;
    n=n-1;
  }

Indicați expresia care poate înlocui punctele de suspensie astfel încât, în urma executării secvenței obținute, variabila y să memoreze valoarea 108.

Raspuns: n/2

-> Exercitiul #1063 <-

Variabila x este de tip întreg și poate memora un număr din intervalul [1000,2000]. Indicați valoarea minimă pe care o poate avea expresia C/C++ de mai jos.

(x-999)%1000

Raspuns: 0

-> Exercitiul #1064 <-

Subprogramul f este definit mai jos.

void f(int x) 
{ if(x>=2)   
  { if(x%2==0) cout<<0;  |  printf(”0”);     
    f(x/2);
  }
  else cout<<7;  |  printf(”7”);
  cout<<x; | printf(”%d”,x); 
}

Indicați ce se afișează în urma apelului de mai jos.

f(9);

Raspuns: 0071249

-> Exercitiul #1065 <-

Utilizând metoda backtracking, se generează toate meniurile care cuprind câte patru feluri distincte de mâncare din mulțimea {aperitiv, desert, legume, paste, salată, supă}, fiecare meniu respectând următoarele condiții:

dacă există aperitiv, este servit primul;
dacă există desert, este servit ultimul;
NU sunt servite legume și salată în același meniu;
dacă există paste și supă în același meniu, pastele NU sunt servite înainte de supă.
Două meniuri sunt distincte dacă diferă prin cel puțin un fel de mâncare sau prin ordinea servirii acestora. Primele cinci meniuri generate sunt, în această ordine: (aperitiv, legume, paste, desert), (aperitiv, legume, supă, desert), (aperitiv, legume, supă, paste), (aperitiv, paste, legume, desert), (aperitiv, paste, salată, desert).

Indicați al șaselea meniu generat

Raspuns: (aperitiv, salată, paste, desert)

-> Exercitiul #1066 <-

Un graf orientat cu 5 vârfuri, numerotate de la 1 la 5, este reprezentat mai jos.

1: 2
2: 5
3: 4
4: 3
5: 1, 3, 4

Indicați numărul de componente tare conexe ale grafului.

Raspuns: 2

-> Exercitiul #1067 <-

Un arbore cu rădăcină are 20 de noduri, dintre care 10 noduri de tip “frunză”. Indicați numărul maxim de noduri care au același “tată” în acest arbore.

Raspuns: 10

-> Exercitiul #1083 <-

Un graf neorientat are 6 noduri și fiecare dintre acestea are gradul egal cu 1. Indicați numărul de componente conexe ale grafului.

Raspuns: 3

-> Exercitiul #1084 <-

Un arbore cu rădăcină are 8 noduri, numerotate de la 1 la 8, și muchiile [1,3], [1,7], [1,8], [2,4], [3,5], [3,6], [4,5]. Știind că rădăcina arborelui este nodul numerotat cu 6, indicați nodurile de tip frunză ale arborelui dat.

Raspuns: 2,7,8

-> Exercitiul #1085 <-

Indicațio expresie C/C++ echivalentă cu următoarea: (x>5)&& (x<20) || (x!=y)

Raspuns: !(x<=5||x>=20)||(x!=y)

-> Exercitiul #1086 <-

Subprogramul f este definit mai jos. Indicați valoarea f(4770777,7).

int f (int n, int k)
{ if (n!=0)
    if(n%10==k)return 1+f(n/10,k);
  return 0;
}

Raspuns: 3

-> Exercitiul #1087 <-

Variabila x este declarată mai jos. Indicați secvența care, în urma executării, memorează în variabila x ziua, luna și anul corespunzătoare unei date calendaristice citite de la tastatură.

struct data
{
    int zi, luna, an;
} x

Raspuns: cin>>x.zi>>x.luna>>x.an;  |  scanf(”%d%d%d”,&x.zi,&x.luna,&x.an);

-> Exercitiul #1088 <-

Utilizând metoda backtracking, sunt generate toate numerele din intervalul [100,999], cu proprietatea că au cifrele în ordine crescătoare, cifrele aflate pe poziții consecutive sunt de paritate diferită, iar suma lor este egală cu 14. Scrieți toate numerele generate, în ordine crescătoare, separate prin exact un spațiu.

Raspuns: 149 167 347

-> Exercitiul #1089 <-

Variabilele s1 și s2 pot memora câte un șir de cel mult 50 de caractere. Scrieți ce se afișează în urma executării secvenței alăturate.

strcpy(s1,"bac2021");
strcpy(s2,s1+3); 
strcpy(s2+2,"20-");
strcat(s2,s1+3);
cout<<s2; | printf("%s",s2);

Raspuns: 2020-2021

-> Exercitiul #1176 <-

Un arbore cu 10 noduri, numerotate de la 1 la 10, este reprezentat prin vectorul de „tați” (0,1,1,1,2,3,3,7,4,6). Indicați numărul de frunze ale arborelui.

Raspuns: 4

-> Exercitiul #1177 <-

Un graf neorientat are 10 noduri, numerotate de la 1 la 10, și muchiile [1,4], [1,10], [2,3], [2,6], [2,9], [3,6], [4,10], [5,7], [5,8], [5,10], [7,8]. Indicați numărul minim de muchii care trebuie adăugate pentru ca graful obținut să aibă cel puțin un ciclu care să traverseze toate muchiile sale.

Raspuns: 2

-> Exercitiul #1178 <-

Subprogramul f este definit mai jos.

void f(int x)
{ while(x>1){ x=x-1; f(x-1);}
  cout<<x;  |  printf(”%d”,x);
}

Indicați ce se afișează în urma apelului:

f(4);

Raspuns: 01101

-> Exercitiul #1179 <-

Variabilele x și y sunt de tip întreg și memorează numere naturale nenule. Indicați o expresie C/C++ care are valoarea 1 dacă și numai dacă numărul memorat în x are cifra zecilor egală cu 2 și este un multiplu al numărului memorat în y.

Raspuns: x/10%10==2 && x%y==0

-> Exercitiul #1180 <-

Utilizând metoda backtracking se generează toate posibilitățile de a forma selecțiide câte 4 piese ale soliștilor/formațiilor din mulțimea {Bono, Bruce Springsteen, Bon Jovi, Leonard Cohen, Portugal.The Man}, astfel încât pe oricare două poziții alăturate să nu se afle două piese ale soliștilor/formațiilor din submulțimea {Bono, Bon Jovi, Portugal.TheMan}. Primele cinci selecții generate sunt, în această ordine, (Bono, Bruce Springsteen, Bono, Bruce  Springsteen), (Bono, Bruce Springsteen, Bono, Leonard Cohen), (Bono, Bruce Springsteen, Bruce Springsteen, Bono), (Bono, Bruce Springsteen, Bruce Springsteen, Bruce Springsteen), (Bono, Bruce Springsteen, Bruce Springsteen, Bon Jovi). Ultima selecție generată este:

Raspuns: (Portugal.The Man, Leonard Cohen, Portugal.The Man, Leonard Cohen)

-> Exercitiul #1181 <-

Un graf neorientat are 20 de noduri și 4 componente conexe, fiecare dintre acestea fiind arbore. Indicați numărul de muchii ale grafului.

Raspuns: 16

-> Exercitiul #1182 <-

Un graf neorientat are 6 noduri, numerotate de la 1 la 6, și muchiile [1,2], [1,3], [2,3], [2,4], [2,5], [2,6], [3,4], [4,5]. Indicați numărul nodurilor care au gradul un număr par.

Raspuns: 2

-> Exercitiul #1183 <-

Utilizând metoda backtracking, se generează toate modalitățile de forma un grup de patru persoane din mulțimea {Ana, Ioana, Lia, Maria, Miruna, Simona}. Două grupuri diferă prin cel puțin o persoană. Primele cinci soluții generate sunt, în această ordine: (Ana, Ioana, Lia, Maria), (Ana, Ioana, Lia, Miruna), (Ana, Ioana, Lia, Simona), (Ana, Ioana, Maria, Miruna), (Ana, Ioana, Maria,Simona). Indicați o enumerare generată ca soluție, în această formă.

Raspuns: (Ioana, Maria, Miruna, Simona)

-> Exercitiul #1184 <-

Expresia C/C++ !(a<2001) && (a<=2002) || (a>=2020) && !(a>2021) are valoarea 1 dacă și numai dacă valoarea memorată de variabila reală a aparține:

Raspuns: [2001,2002] ∪[2020,2021]

-> Exercitiul #1185 <-

Subprogramul afis este definit mai jos.

void afis (int a)
{ cout<<”+”;  |  printf(”+”);
  if(a>0)
  { afis(a/1000); 
    cout<<a;  |  printf(”%d”,a);
  }
  cout<<”+”;  |  printf(”+”);
}

Indicați ce se afișează în urma apelului:

afis(12345);

Raspuns: ++++12+12345+

-> Exercitiul #1186 <-

Scrieți ce se afișează în urma executării secvenței de mai jos, în care variabilele s și t permit memorarea câte unui șir de cel mult 50 de caractere.

strcpy(s,"vorbeste");
s[3]=s[0]; s[5]=s[2];s[0]=s[1]+1; s[2]=s[1]-2; s[6]=s[4]-1;
strcpy(t,s); t[3]='\0';
cout<<t<<" "<<s+3; | printf("%s %s",t,s+3);

Raspuns: pom verde

-> Exercitiul #1187 <-

Indicați o expresie C/C++ care are valoarea 1 dacă și numai dacă numărul memorat în variabila întreagă x aparține reuniunii de intervale [-21,-2]∪[2,21].

Raspuns: !(x<-21 || x>-2) || !(x<2 || x>21)

-> Exercitiul #1188 <-

Subprogramul f este definit mai jos.

void f (int x)
{ cout<<"*";  |  printf("*");
  if(x>0)
  { cout<<x;  |  printf("%d",x);
    f(x/100);
  }
  cout<<"/";  |  printf("/");
}

Indicați ce se afișează în urma apelului:

f(54321);

Raspuns: *54321*543*5*////

-> Exercitiul #1189 <-

Utilizând metoda backtracking, se generează toate modalitățile de a selecta un grup de patru muzee de vizitat în București, dintre cele aflate în mulțimea {Muzeul de Artă Veche Apuseană(MAVA), Muzeul Colecțiilor de Artă(MCA), Muzeul Căilor Ferate Române (MCFR), Muzeul Național al Hărților și Cărții Vechi(MNHCV), Muzeul Național al Literaturii Române(MNLR), Muzeul Național Tehnic(MNT)}. Două grupuri diferă prin cel puțin un muzeu. Primele cinci soluții generate sunt, în această ordine: (MAVA, MCA, MCFR, MNHCV), (MAVA, MCA, MCFR,MNLR), (MAVA, MCA, MCFR,MNT), (MAVA, MCA, MNHCV,MNLR), (MAVA, MCA, MNHCV,MNT). Indicați o enumerare care este generată ca soluție, în această ordine.

Raspuns: (MCA,MNHCV, MNLR, MNT)

-> Exercitiul #1190 <-

Un graf neorientat cu 5 noduri este reprezentat prin matricea de adiacență de mai jos. Indicați numărul de muchii care pot fi eliminate, astfel încât graful parțial obținut să fie arbore.

0 1 1 0 1 
1 0 1 0 0 
1 1 0 1 1 
0 0 1 0 1 
1 0 1 1 0

Raspuns: 3

-> Exercitiul #1191 <-

Un graf neorientat cu 7 noduri, numerotate de la 1 la 7, are mulțimea muchiilor {[2,3], [2,5], [2,6], [3,6], [4,7], [5,1], [6,5]}. Indicați numărul de subgrafuri ale sale, pentru fiecare dintre acestea mulțimea muchiilor fiind {[2,3], [2,6], [3,6]}.

Raspuns: 6

-> Exercitiul #1192 <-

Variabila s permite memorarea unui șir de cel mult 20 de caractere. Scrieți ce se afișează în urma executării secvenței de mai jos.

strcpy(s,"muzeu");
s[0]=s[0]+1;
cout<<s[1]<<s[0]<<" "; | printf("%c%c ",s[1],s[0]);
strcpy(s,"muzeu"+2);
cout<<s; | printf("%s",s);

Raspuns: un zeu

-> Exercitiul #1193 <-

Pentru a verifica dacă într-un tablou unidimensional există elementul cu valoarea x=48, se aplică metoda căutării binare, iar succesiunea de elemente a căror valoare se compară cu x pe parcursul aplicării metodei este 14, 24, 48. Elementele tabloului pot fi:

Raspuns: (4,8,9,14,16,24,48)

-> Exercitiul #1194 <-

Tabloul unidimensional A are elementele: A=(2,20,27,36,50), iar în urma interclasării lui crescătoare cu tabloul unidimensional B se obține tabloul cu elementele (2,3,5,8,20,27,36,45,50,63). Indicați elementele tabloului B, în ordinea apariției lor în acesta.

Raspuns: (63,45,8,5,3)

-> Exercitiul #1195 <-

Indicați o expresie C/C++ care are valoarea 1.

Raspuns: floor(20.21)/20

-> Exercitiul #1196 <-

Indicați o secvență de instrucțiuni care realizează interschimbarea valorilor variabilelor întregi x și y.

Raspuns: x=x+y; y=x-y; x=x-y;

-> Exercitiul #1197 <-

Toate variabilele din secvența de mai jos sunt de tip char. Scrieți ce se afișează în urma executării secvenței.

c1='m';c2='u';c3='z';c4='e';
c1=c1+1;
cout<<c2<<c1<<" ";| printf("%c%c ",c2,c1);cout<<c3<<c4<<c2; | printf("%c%c%c",c3,c4,c2);

Raspuns: un zeu

-> Exercitiul #1198 <-

Variabilele x și y sunt de tip întreg, x memorând valoarea 8, iar y valoarea 6. Indicați expresia C/C++ care are valoarea 0.

Raspuns: !(x/2+2==y)

-> Exercitiul #1199 <-

Subprogramul f este definit mai jos.

int f(int n)
{ int c;
  if (n==0) return 9;
  c=f(n/10); if (n%10<c) return n%10;
  return c;
}

Indicați valoarea f(38627).

Raspuns: 2

-> Exercitiul #1200 <-

Utilizând metoda backtracking se generează, în ordine crescătoare, toate numerele de câte 5 cifre, toate din mulțimea {1,2} cu proprietatea că nu există mai mult de două cifre 1 pe poziții consecutive. Primele 5 soluții generate sunt, în această ordine: 11211, 11212, 11221, 11222, 12112. Indicaţi cea de a 8-a soluţie generată.

Raspuns: 12211

-> Exercitiul #1201 <-

Un arbore are 10 noduri, numerotate de la 1 la 10, și muchiile [1,2], [1,3], [1,5], [1,6], [2,8], [2,9], [3,4], [3,10], [4,7]. Indicați lungimea unui lanț elementar care are ca extremități nodurile 6 și 7.

Raspuns: 4

-> Exercitiul #1202 <-

Indicați numărul grafurilor neorientate, distincte, cu 5 noduri, care se pot construi. Două grafuri sunt distincte dacă matricele lor de adiacență sunt diferite.

Raspuns: 2^10

-> Exercitiul #1203 <-

În secvenţa de mai jos, variabila i este de tip întreg, iar variabilele s și t pot memora câte un şir cu cel mult 20 de caractere. Scrieți ce se afișează pe ecran în urma executării secvenței.

strcpy(s,"sanataTEA");
cout<<strlen(s);
i=0;
while(i<strlen(s))
  if(s[i]=='a')
  { strcpy(t, s+i+1); strcpy(s+i, t);}
  else 
    i=i+1;
cout<<s;

Raspuns: 9sntTEA

-> Exercitiul #1204 <-

Pentru a verifica dacă în tabloul unidimensional (3,7,12,15,17,22,30) există elementul cu valoarea x=6 se aplică metoda căutării binare. Indicați succesiunea de elemente a căror valoare se compară cu x pe parcursul aplicării metodei.

Raspuns: 15,7,3

-> Exercitiul #1205 <-

Tablourile unidimensionale A și B au valorile A=(18,15,9,5,1) și B=(40,15,13,4,1). Pentru a determina al 5-lea element obținut în urma interclasării tablourilor în ordine crescătoare, se compară elementul cu valoarea xa din A cu elementul cu valoarea xb din B. Indicați valorile lui xa și xb.

Raspuns: xa=9 și xb=13

-> Exercitiul #1206 <-

Indicați o expresie C/C++ care are valoarea 1.

Raspuns: floor(5.35)==ceil(4.75)

-> Exercitiul #1207 <-

În secvenţa de instrucțiuni de mai jos, toate variabilele sunt de tip întreg. Indicați o expresie care poate înlocui punctele de suspensie astfel încât, în urma executării secvenţei obținute, variabila m să aibă o valoare egală cu cel mai mare divizor comun al numerelor 430 și 2021.

m=430; n=2021;
while (...)
{ if(m>n) m=m-n;
  else n=n-m; 
}

Raspuns: m!=n

-> Exercitiul #1208 <-

Algoritmul de mai jos este reprezentat în pseudocod. S-a notat cu a%b restul împărțirii numărului natural a la numărul natural nenul b și cu [c] partea întreagă a numărului real c.

citește n, k (numere naturale)
p←1
┌ cât timp n>0 execută
│ c←n%10
│┌ dacă k>0 atunci
││ ┌dacă c%2=1 atunci
││ │ p←p*c
││ └■
│└■
│ n←[n/10]
│ k←k-1
└■ scrie p

Scrieți valoarea care se afișează în urma executării algoritmului dacă se citesc, în această ordine, numerele 296385 și 3.

Raspuns: 15

-> Exercitiul #1209 <-

Algoritmul de mai jos este reprezentat în pseudocod. S-a notat cu a%b restul împărțirii numărului natural a la numărul natural nenul b și cu [c] partea întreagă a numărului real c.

citește n, k (numere naturale)
p←1
┌ cât timp n>0 execută
│ c←n%10
│┌ dacă k>0 atunci
││ ┌dacă c%2=1 atunci
││ │ p←p*c
││ └■
│└■
│ n←[n/10]
│ k←k-1
└■ scrie p

Dacă pentru k se citește numărul 4, scrieți cel mai mic și cel mai mare număr din intervalul [104,105) care pot fi citite pentru n, astfel încât, pentru fiecare dintre acestea, în urma executării algoritmului, să se afișeze 1.

Raspuns: 10000 98888

-> Exercitiul #1210 <-

În secvenţa de mai jos, variabila c memorează un caracter, iar variabilele i și k sunt de tip întreg.

k=0;
for(i=1;i<=9;i++)
{   cin>>c; | scanf("%c",&c);
    if(c=='a') k=k+1;
}

Scrieţi valoarea variabiei k în urma executării secvenţei, știind că se citesc de la tastatură, în această ordine, literele s a n a t a T E A

Raspuns: 3

-> Exercitiul #1211 <-

Indicați o expresie C/C++ care are valoarea 1 dacă și numai dacă numerele naturale memorate în variabilele întregi x și y sunt pare, consecutive.

Raspuns: ((x-y==2) || (y-x==2)) && (x%2==0)

-> Exercitiul #1212 <-

Subprogramul f este definit mai jos.

void f (int n, int k)
{ if (n!=0)
  { f(n/10,k+1);
    if(n%10==k) cout<<k;| printf(”%d”,k);
  }
}

Indicați ce se afișează în urma apelului:

f(7552021,1);

Raspuns: 7521

-> Exercitiul #1213 <-

Utilizând metoda backtracking se generează toate posibilitățile de a scrie numărul 10 ca sumă de numere prime. Soluțiile generate sunt, în această ordine: 2+2+2+2+2, 2+2+3+3, 2+3+5, 3+7, 5+5. Folosind aceeași metodă se generează toate posibilitățile de a scrie numărul 9 ca sumă de numere prime. Indicați a treia soluție generată.

Raspuns: 2+7

-> Exercitiul #1214 <-

Un arbore cu rădăcină, cu 9 noduri, numerotate de la 1 la 9, este reprezentat prin vectorul de „tați” (8,7,6,5,7,7,8,0,8). Indicați toți descendenții nodului 7.

Raspuns: 2,3,4,5,6

-> Exercitiul #1215 <-

Un graf neorientat are 6 noduri, numerotate de la 1 la 6, și muchiile [1,2], [1,3], [2,3], [2,4], [2,5], [2,6], [3,4], [4,5]. Indicați numărul nodurilor care au gradul un număr impar.

Raspuns: 4

-> Exercitiul #1216 <-

Variabila i este de tip întreg, iar variabila s permite memorarea unui șir cu cel mult 102 caractere. Scrieți ce se afișează pe ecran în urma executării secvenței următoare.

strcpy(s,"informatica");
cout<<strlen(s); | printf("%d",strlen(s));
for (i=0;i<strlen(s);i++)
  if (strchr("aeiou",s[i])!=NULL)
    s[i]= '*';
cout<<s; | printf("%s",s);

Raspuns: 11*nf*rm*t*c*

-> Exercitiul #1217 <-

Pentru a verifica dacă în tabloul unidimensional (2,8,13,19,20,38,47) există elementul cu valoarea x se aplică metoda căutării binare. Știind că valoarea x este comparată cu trei elemente ale tabloului pe parcursul aplicării metodei, indicați o valoare cu care x NU poate fi egală.

Raspuns: 8

-> Exercitiul #1218 <-

Variabilele i și j sunt de tip întreg. Indicați expresia care poate înlocui punctele de suspensie astfel încât, în urma executării secvenței obținute, să se afișeze pe ecran valorile de mai jos, în această ordine.

for(i=1;i<=4;i++)
{ for(j=1;j<=5;j++)
    cout<<.........<<" "; | printf("%d ",.........);
  cout<<endl;  |  printf("\n");
}

1 2 3 4 5
2 4 6 8 0 
3 6 9 2 5 
4 8 2 6 0

Raspuns: (i * j) % 10

-> Exercitiul #1219 <-

Variabilele E, x, y, z memorează valori de tip real (z>0). Indicați instrucţiunea prin care i se atribuie variabilei E rezultatul evaluării expresiei x+y/√z⋅t^2.

Raspuns: E=(x+y)/sqrt(z)*pow(t,2);

-> Exercitiul #1220 <-

Variabilele x, y și z sunt de tip întreg și memorează valori distincte. Indicați o secvenţă de instrucţiuni în urma executării căreia se realizează interschimbarea valorilor variabilelor x și y.

Raspuns: z=y; y=x; x=z;

-> Exercitiul #1221 <-

Variabilele x și y sunt de tip întreg. Indicați o expresie C/C++ echivalentă cu expresia !(x<3 && y>5).

Raspuns: x>=3 || !(y>5)

-> Exercitiul #1222 <-

Subprogramul f este definit mai jos.

int f(int x, int y)
{   if(x==0) return 0;
    if(y==0) return 1;
    return x%2+y%2+f(x/10,y/10);
}

Indicați valoarea lui f(2121,19).

Raspuns: 4

-> Exercitiul #1223 <-

Pe parcursul vacanței au loc mai multe reprezentații online ale unei piese de teatru; pentru o reprezentație sunt necesari trei copii, unul pentru rolul principal, iar fiecare dintre ceilalți doi pentru câte un rol secundar. Pentru oricare două reprezentații distincte cel puțin un rol este atribuit, în cele două distribuții, unor copii diferiți. În urma audițiilor au fost selectați șase copii, Alex, Cezar, Tudor, Daria, Ela și Maria:doar Alex poate primi rolul principal, iar fiecare dintre ceilalți cinci copii poate interpreta oricare dintre cele două roluri secundare. De exemplu, pentru patru reprezentații sunt distribuiți, în ordinea rolurilor, copiii: (Alex, Ela, Maria), (Alex, Maria, Ela), (Alex, Maria, Cezar), (Alex, Cezar, Tudor). Indicați numărul maxim de reprezentații distincte în care poate fi distribuită Daria.

Raspuns: 8

-> Exercitiul #1224 <-

Un arbore cu 7 noduri, numerotate de la 1 la 7, are drept rădăcină nodul numerotat cu 4 și este reprezentat în figura alăturată. Indicați vectorul de “tați” al arborelui.

Raspuns: (7,4,5,0,4,5,4)

-> Exercitiul #1225 <-

Un graf neorientat are 10 noduri, numerotate de la 1 la 10, și muchiile [1,2], [2,3], [2,10], [3,10], [4,5], [4,6], [5,6], [6,9], [7,8], [7,9], [8,9]. Indicați numărul minim de muchii care trebuie adăugate pentru ca în graful obținut toate nodurile să aibă drept grade numere pare.

Raspuns: 2

-> Exercitiul #1227 <-

Pentru a verifica dacă în tabloul unidimensional (24,19,10,9,8,4,2) există elementul cu valoarea x se aplică metoda căutării binare. Știind că valoarea x a fost comparată cu trei elemente ale tabloului pe parcursul aplicării metodei, indicați două valori posibile ale lui x.

Raspuns: 24 și 8

-> Exercitiul #1228 <-

Se consideră două tablouri unidimensionale A și B: A=(5,7,15,25,33), iar B=(3,9,21,43,51). În urma interclasării lor în ordine crescătoare se obține tabloul cu elementele:

Raspuns: (3,5,7,9,15,21,25,33,43,51)

-> Exercitiul #1229 <-

Indicați o expresie C/C++ care are valoarea 1.

Raspuns: floor(16.16)==ceil(15.61)

-> Exercitiul #1230 <-

Variabilele x, y, z și w memorează câte un număr real, astfel încât expresia C/C++ de mai jos are valoarea 1.

y+1<w+1 && z<x && w-1<z-1

Indicați variabila care are ca valoare cel mai mare dintre numerele menționate.

Raspuns: x

-> Exercitiul #1231 <-

Variabile x și y sunt de tip întreg. Indicați o pereche de valori pentru care expresia următoare are valoarea 1: (x%100==y%100)&&(x>99)||(y>99)

Raspuns: x=1003 și y=3

-> Exercitiul #1232 <-

Subprogramele f1 și f2 sunt definite mai jos. Indicați valoarea f2(41382).

int f1(int c)
{ if (c%2==1) return 1; 
  else return 2; 
}

int f2(int n) 
{ if (n==0) return 0; 
  else returnf1(n%10)+f2(n/10);
}

Raspuns: 8

-> Exercitiul #1233 <-

Utilizând metoda backtracking se generează în ordine alfabetică anagramele cuvântului bine. Primele patru soluții generate sunt, în această ordine: bein, beni, bien, bine. Indicați a șaptea soluție generată.

Raspuns: ebin

-> Exercitiul #1234

Un arbore cu rădăcină, cu 7 noduri, numerotate de la 1 la 7, este reprezentat prin vectorul de „tați” (5,1,5,1,0,7,5). Indicați etichetele tuturor nodurilor de tip „frunză”.

Raspuns: 2 3 4 6

-> Exercitiul #1235 <-

Un graf neorientat are 5 noduri, etichetate cu câte o literă distinctă din cuvântul lista, în care orice nod etichetat cu o vocală este adiacent doar cu nodurile etichetate cu consoane, iar orice nod etichetat cu o consoană este adiacent doar cu nodurile etichetate cu vocale. Indicați numărul de muchii ale acestui graf.

Raspuns: 6

-> Exercitiul #1236 <-

Pentru a verifica dacă într-un tablou unidimensional există elementul cu valoarea x=26 se aplică metoda căutării binare, iar succesiunea de elemente a căror valoare se compară cu x pe parcursul aplicării metodei este 15 50 26. Indicați o secvență de valori care pot fi, în această ordine, elementele tabloului.

Raspuns: (7,10,12,15,26,50,75)

-> Exercitiul #1237 <-

Tablourile unidimensionale A și B au valorile: A=(14,16,17,30,31) și B=(67,26,25,22,12). Indicați tabloul care se obține în urma interclasării lor în ordine crescătoare.

Raspuns: (12,14,16,17,22,25,26,30,31,67)

-> Exercitiul #1238 <-

Variabilele x și y sunt de tip întreg. Indicați o instrucțiune ce realizează o prelucrare echivalentă următoarea.

x=-abs(y);

Raspuns: 
if(y<0) x=y; 
else x=-y;

-> Exercitiul #1239 <-

Variabilele reale x și y memorează coordonatele centrului unui cerc, în sistemul de coordonate xOy. Indicați o expresie C/C++ care are valoarea 1 dacă și numai dacă centrul cercului este în cadranul I sau în cadranul al III-lea ale sistemului de coordonate xOy, dar nu și pe axele sistemului.

Raspuns: x*y>0

-> Exercitiul #1240 <-

Variabila x este de tip întreg și memorează un număr natural de cel puțin două cifre. Indicați o instrucțiune C/C++ în urma executării căreia se memorează în variabila x numărul obținut din valoarea sa inițială, prin inserarea cifrei 4 între cifra zecilor și cifra unităților.

Raspuns: x=(x/10*10+4)*10+x%10;

-> Exercitiul #1241 <-

Utilizând metoda backtracking se generează toate posibilitățile de a planta de-a lungul unei străzi cinci arbori din mulțimea {salcie,carpen,larice,fag,ulm}. Două soluții sunt diferite dacă ordinea arborilor diferă. Primele patru soluții obținute sunt, în această ordine: (salcie, carpen, larice, fag, ulm), (salcie, carpen, larice, ulm, fag), (salcie, carpen, fag, larice, ulm), (salcie, carpen, fag, ulm, larice). Indicați antepenultima soluție generată.

Raspuns: (ulm, fag, carpen, larice,salcie)

-> Exercitiul #1242 <-

Indicați o declarare corectă pentru o variabilă x care poate memora simultan cele trei coordonate reale ale unui punct în spațiu.

Raspuns: double x[3];

-> Exercitiul #1243 <-

Variabilele x, y și z sunt de tip real și au valori nenule. Indicați expresia matematică ce corespunde expresieiC/C++ -x/2*y+pow(z,2).

Raspuns: –x/2⋅y+z^2

-> Exercitiul #1244 <-

În secvența de mai jos variabilele i și j sunt de tip întreg.

for(i=0;i<4;i++)
{ for(j=0;j<5;j++)
    cout<<.........<<" "; | printf("%d ",.........);
  cout<<endl;  |  printf("\n");
}

Indicați expresia care poate înlocui zona punctată astfel încât, în urma executării secvenței obținute, să se afișeze pe ecran valorile următoare:

0 1 2 0 1
1 2 0 1 2
2 0 1 2 0
0 1 2 0 1

Raspuns: (i+j) % 3

-> Exercitiul #1245 <-

Variabilele x și y sunt de tip întreg. Indicați o instrucțiune ce realizează o prelucrare echivalentă următoarea.

x=-abs(y);

Raspuns: 
if(y<0) x=y; 
else x=-y;

-> Exercitiul #1256 <-

Variabilele x și y sunt de tip real (x≠-2). Indicați o expresie C/C++ corespunzătoare expresiei aritmetice ((x+y)/5 + (x-y)/2) / (x+2).

Raspuns: ((x+y)/5+(x-y)/2)/(x+2)

-> Exercitiul #1257 <-

Subprogramul f este definit mai jos. Indicați valoarea lui f(1234).

int f(int n) 
{ if (n!=0) 
   return (n%2)*(n%10)+f(n/10); 
  return 0;  
}

Raspuns: 4

-> Exercitiul #1258 <-

Utilizând metoda backtracking se generează toate numerele formate din cifre distincte, cifre a căror sumă să fie 6. Primele patru soluții generate sunt, în această ordine: 1023, 1032, 105 și 1203. Indicați cea de a șasea soluție generată.

Raspuns: 1230

-> Exercitiul #1259 <-

Unui arbore cu 10 noduri i se adaugă o muchie, cu extremitățile în două dintre nodurile sale. Indicați numărul ciclurilor elementare pe care le conține graful obținut.

Raspuns: 1

-> Exercitiul #1260 <-

Un graf neorientat are 21 de noduri, numerotate de la 1 la 21; pentru oricare două noduri distincte ale sale, numerotate cu i, respectiv cu j, există muchia [i,j] dacă și numai dacă ultima cifră a lui i este egală cu ultima cifră a lui j. Indicați numărul valorilor nule din matricea de adiacență a grafului.

Raspuns: 21^2−2⋅12

-> Exercitiul #1261 <-

Termenii fiecăruia dintre șirurile de numere S1, S2 și S3 sunt scriși mai jos, în ordinea apariției lor în șir.

S1:2,22,25,23,24;
S2:1,8,9,6;
S3:9,5,4,1.

Indicați șirul/șirurile cărora li se poate aplica algoritmul de căutare binară direct, fără alte prelucrări prealabile.

Raspuns: doar S3

-> Exercitiul #1262 <-

În secvența de mai jos toate variabilele sunt de tip întreg, iar de la tastatură se citesc 10 numere naturale nenule.

m=0; 
for(i=1;i<=10;i++) 
{ cin>>x; | scanf("%d",&x); 
  ........... 
}

Indicați o instrucțiune care poate înlocui punctele de suspensie astfel încât, în urma executării secvenţei obţinute, valoarea variabilei m să fie ultimul dintre numerele mai mari sau egale cu 2021 citite, sau 0 dacă nu există niciun astfel de număr.

Raspuns: if(x>=2021) m=x;

-> Exercitiul #1263 <-

Variabila x este de tip real. Indicați o expresie C/C++ care are valoarea 1 pentru orice număr memorat în variabila x.

Raspuns: ceil(x)+1==ceil(x+1)

-> Exercitiul #1264 <-

În secvența de mai jos toate variabilele sunt întregi, iar variabila n memorează un număr natural nenul.

s=0; i=1; 
while(i*i<n) 
{ if(n%i==0)s=s+.....; 
  i=i+1; 
} 
if(i*i==n) s=s+i;

Indicați o expresie care poate înlocui punctele de suspensie astfel încât, în urma executării secvenței obținute, variabila s să memoreze suma tuturor divizorilor naturali ai numărului memorat în variabila n.

Raspuns: i+n/i

-> Exercitiul #1265 <-

Indicați o expresie C/C++ care are valoarea 1 dacă și numai dacă valorile variabilelor întregi x și y sunt numere pare.

Raspuns: x%2==0 && (y+1)%2!=0

-> Exercitiul #1266 <-

Subprogramul f este definit mai jos. Indicați valorile pe care le pot avea parametrii n și c, astfel încât, în urma apelului, f(n,c) să aibă valoarea 2021.

int f(int n,int c) 
{ if(n==0) return 0; 
  else  
    if(n%10==c) return f(n/10,c); 
    else return n%10+10*f(n/10,c); 
}

Raspuns: n=720721 și c=7

-> Exercitiul #1267 <-

Variabila m memorează elementele unui tablou bidimensional cu 100 de linii și 100 de coloane, numerotate de la 0 la 99. Indicați expresia C/C++ prin care poate fi accesat un element aflat pe diagonala secundară a tabloului.

Raspuns: m[42][57]

-> Exercitiul #1268 <-

Un graf neorientat are 6 noduri, numerotate de la 1 la 6, și muchiile [1,2], [1,3], [2,3], [3,4], [3,5], [4,5], [5,6]. Indicați un ciclu elementar al acestui graf.

Raspuns: 1,2,3,1

-> Exercitiul #1269 <-

Într-un arbore cu rădăcină un nod se află pe nivelul x dacă lanțul elementar care are o extremitate în nodul respectiv și cealaltă extremitate în rădăcina arborelui are lungimea x. Pe nivelul 0 se află un singur nod (rădăcina).

Într-un arbore cu rădăcină toate nodurile de pe același nivel au un număr egal de „fii” și nu există două niveluri diferite cu același număr de noduri. Indicați numărul minim de noduri de pe nivelul 3.

Raspuns: 8

-> Exercitiul #1270 <-

Tablourile unidimensionale A și B au valorile A=(1,7,10,18,32) și B=(2,5,12,16,49) și se interclasează în ordine crescătoare, fiind parcurse de la stânga la dreapta. Pentru a determina al 4-lea element obținut în urma interclasării, se compară elementul cu valoarea  xa din  A cu elementul cu valoarea xb din B. Indicați valorile lui xa și xb.

Raspuns: xa=7 și xb=12

-> Exercitiul #1271 <-

Variabilele întregi fa și fb memorează numărătorul, respectiv numitorul unei fracții. Indicați o secvență de instrucțiuni C/C++ care să memoreze în variabilele întregi sa și sb numărătorul, respectiv numitorul fracției obținute prin scăderea fracției menționate mai sus din fracția 2020/2021.

Raspuns: 
sa=2020*fb-2021*fa; 
sb=fb*2021;

-> Exercitiul #1272 <-

Variabilele x și y sunt de tip real, x are valoarea 3.5, iar y are valoarea 7.2. Indicați expresia C/C++ a cărei valoare este 3.

Raspuns: floor(y-x)

-> Exercitiul #1273 <-

Șirul lui Fibonacci are termenii 1, 1, 2, 3, 5, 8 ….

În secvența C/C++ de mai jos toate variabilele sunt de tip întreg.

while(x>0) 
{ z=y-x; 
  y=x; 
  x=z; 
} 
if(.........)z=1; 
else z=0;

Indicați expresia care poate înlocui punctele de suspensie, astfel încât, în urma executării secvenţei obținute, variabila z să aibă valoarea 1 dacă numerele nenule memorate inițial în variabilele x și y (x<y) sunt termeni consecutivi ai șirului lui Fibonacci, sau valoarea 0 altfel.

Raspuns: x==0 && y==1

-> Exercitiul #1281 <-

Care dintre următoarele cuvinte este un identificator C++ corect?

Raspuns: x_1

-> Exercitiul #1282 <-

Adevărat sau fals: În C++ toate variabilele trebuie declarate.

Raspuns: Adevărat

-> Exercitiul #1283 <-

Care dintre propozițiile de mai jos este adevărată?

Raspuns: În C++ variabilele pot fi inițializate odată cu declararea.

-> Exercitiul #1284 <-

Adevărat sau fals: În C++ constantele reale au ca seprator zecimal caracterul virgulă ,.

Raspuns: Fals

-> Exercitiul #1291 <-

S-a notat cu a%b restul împărțirii numărului natural a la numărul natural nenul b.

citește n,x,y  
  (numere naturale nenule, x≤n, y≤n) 
 ok←0 
┌ pentru i←1,n execută 
│┌ dacă (i%x=0 și i%y≠0) sau  
││     (i%x≠0 și i%y=0) atunci  
││ scrie i, ' ' 
││ ok←1 
│└■ 
└■ 
┌ dacă ok=0 atunci scrie 0 
└■ 

Scrieți ce se afișează în urma executării algoritmului dacă se citesc, în această ordine, numerele 15, 3, 4.

Scrieți valorile afișate separându-le prin exact un spațiu.

Raspuns: 3 4 6 8 9 15